apiVersion: v1
data:
  AIDBOX_BASE_URL: https://aidbox.ucfwealth.app
  AIDBOX_FHIR_VERSION: 4.0.0
  AIDBOX_PORT: "8080"
  AIDBOX_ZEN_ENTRYPOINT: box/box
  BOX_PROJECT_GIT_PROTOCOL: https
  BOX_PROJECT_GIT_SUB__PATH: zrc
  BOX_PROJECT_GIT_URL: https://github.com/HadleyLab/ucfwealth.git
  DISCOURSE_URL_REDIRECT: https://community.ucfwealth.app
  FRONTEND_URL_AUTH: https://ucfwealth.app/auth
  PGDATABASE: devbox
  PGHOST: postgres-master
  PGPORT: "5432"
  PROMETHEUS_JVM_EXPORTER: enable
kind: ConfigMap
metadata:
  name: aidbox-td48t728k2
  namespace: staging
---
apiVersion: v1
data:
  AIDBOX_URL: http://aidbox:8080
  APP_ID: ucfwealth
  APP_PORT: "3000"
  APP_URL: http://app:3000
  DCM_TO_PNG_URL: https://dcm-to-png.ucfwealth.app
  FRONTEND_URL: https://ucfwealth.app
kind: ConfigMap
metadata:
  name: app-f494b8kfmd
  namespace: staging
---
apiVersion: v1
data:
  PGDATA: /data/pg
  POSTGRES_DB: postgres
kind: ConfigMap
metadata:
  name: postgres-ckhh955gbg
  namespace: staging
---
apiVersion: v1
data:
  postgresql.conf: "# networking settings\nlisten_addresses = '*'\nport = 5432\nmax_connections
    = 200\n\n# memory settings\nshared_buffers = 4GB # 25% of total memory size\nwork_mem
    = 10MB\ndynamic_shared_memory_type = posix\t# the default is the first option\n\n#
    asynchronous behavior\nmax_worker_processes = 17\nmax_parallel_workers_per_gather
    = 9\nmax_parallel_maintenance_workers = 9\nmax_parallel_workers = 17\nparallel_leader_participation
    = on\n\n# wal settings\nwal_level = logical\nwal_log_hints = on\nmax_wal_size
    = 1GB\nmin_wal_size = 100MB\narchive_mode = on\narchive_command = 'wal-g wal-push
    %p'\narchive_timeout = 60\nrestore_command = 'wal-g wal-fetch %f %p'\n# wal_compression
    = on ;; TODO measure pg_wal size before and after\n\n# replication\nmax_wal_senders
    = 10 # depends on replicas count\nmax_replication_slots = 10 # depends on replicas
    count\nmax_slot_wal_keep_size = 30GB\n\n# standby settings, ignored on a master
    server\nhot_standby = on\n\n# query planner settings\neffective_cache_size = 4GB
    # depends on total memory\n\n# logging settings\nlog_timezone = 'Etc/UTC'\n\n#
    postgres process settings\ncluster_name = 'sandboxdevbox'\nupdate_process_title
    = on\n\n# statistics\ntrack_activities = on\ntrack_counts = on\ntrack_io_timing
    = on\n\n# autovacuum\nautovacuum = on\nautovacuum_max_workers = 4\nautovacuum_vacuum_threshold
    = 20\nautovacuum_analyze_threshold = 20\nautovacuum_vacuum_scale_factor = 0.02\nautovacuum_analyze_scale_factor
    = 0.01\n\n# client connection\ndatestyle = 'iso, mdy'\ntimezone = 'Etc/UTC'\nlc_messages
    = 'C'\nlc_monetary = 'C'\nlc_numeric = 'C'\nlc_time = 'C'\n\n# text search\ndefault_text_search_config
    = 'pg_catalog.english'\n\n# shared lib settings\nshared_preload_libraries = 'pg_stat_statements'\npg_stat_statements.track
    = all\npg_stat_statements.max = 10000\n\n# pg_stat_statements.track_planning =
    on ;; recomended for stage\n"
kind: ConfigMap
metadata:
  name: postgres-conf-9d7k5b2k44
  namespace: staging
---
apiVersion: v1
data:
  AIDBOX_ADMIN_PASSWORD: Q2hlbTN4ZTdlZWhlaTRVZg==
  AIDBOX_CLIENT_ID: cm9vdC1WZWlrdTNsdQ==
  AIDBOX_CLIENT_SECRET: T2NoYW84QWhJZXkzdmllNA==
  AIDBOX_LICENSE: |
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnZabVpzYVc1bElqcG
    1ZV3h6WlN3aVkzSmxZWFJ2Y2lJNmV5SnBaQ0k2SWpBNE1URXdNakUxTFdVek9EZ3RORFpt
    TnkwNE5XRXdMV0ZsT1RVMU5HTTVNelEzT0NJc0luSmxjMjkxY21ObFZIbHdaU0k2SWxWel
    pYSWlmU3dpYTJWNUlqb2liMjVzYVc1bExUSXdNakl3TlRJMExURTBNelkwTnlJc0ltNWhi
    V1VpT2lKMVkyWjNaV0ZzZEdnaUxDSmxlSEJwY21GMGFXOXVJam9pTWpBeU1pMHdPUzB5Tm
    xReE1Ub3pORG94Tnk0M01UUmFJaXdpZEhsd1pTSTZJbk4wWVc1a1lYSmtJaXdpWTNKbFlY
    UmxaQ0k2SWpJd01qSXRNRGt0TVRKVU1URTZNelE2TVRjdU56RTBXaUlzSW5CeWIyUjFZM1
    FpT2lKaGFXUmliM2dpTENKd2NtOXFaV04wSWpwN0ltbGtJam9pTXpnNE4ySXlaRE10WVRJ
    NVl5MDBOV1ExTFRreE1qa3RZMll4WTJVM01UTmpPVE5oSWl3aWNtVnpiM1Z5WTJWVWVYQm
    xJam9pVUhKdmFtVmpkQ0o5TENKemRHRjBkWE1pT2lKaFkzUnBkbVVpTENKcFpDSTZJbUkw
    WkRBelpEVmlMV0poTldFdE5HSmtZaTA0T1dZd0xUazBZekkxTVRKalpqY3dZaUlzSW1sdV
    ptOGlPbnNpWjI5aGJDSTZJbkJ5YjJSMVkzUnBiMjRpTENKb2IzTjBhVzVuSWpvaWIyNHRj
    SEpsYldselpYTWlmU3dpYVhOemRXVnlJam9pYUhSMGNITTZMeTloYVdSaWIzZ3VZWEJ3SW
    4wLmwyMzgyQUlWNGZVbmJtRHBFZjJ2VHUzakIzQjFmeFo0R2w2U1d2TlgweTFzcmpMRUxB
    M2xCSlB5Mlk1NDRRTFV1N2pQc2hkQTdOel82VXFXQUFzcGEzSDRrejh4UjZYNVd2V0l2WW
    RUNUJMLS00YlhIQWZuTl8tQ0RmUEN1Y19hYm5lN2NMbWxOME9GZVdfY1FGeURuMXo4RHUx
    aG5DRXpDTWZxM19yTXZZcw==
  PGPASSWORD: Z2VpWW9oazZycGhvb1NoNGk=
  PGUSER: cG9zdGdyZXM=
kind: Secret
metadata:
  name: aidbox-hfg48hch4g
  namespace: staging
type: Opaque
---
apiVersion: v1
data:
  AIDBOX_CLIENT_ID: cm9vdC1WZWlrdTNsdQ==
  AIDBOX_CLIENT_SECRET: T2NoYW84QWhJZXkzdmllNA==
  APP_SECRET: YmVpR2FlOGlvaFRpN2lleA==
  AWS_ACCESS_KEY: QUtJQVQyRkZJNFkzV0ZDWEdaUTI=
  AWS_BUCKET_NAME: Y292aWQtaW1hZ2luZy1kZXZlbG9w
  AWS_BUCKET_REGION: dXMtd2VzdC0x
  AWS_SECRET_KEY: NWhxYmgxUHZlMDBkVjJ2TmU2cDVvSFp1Mm92ZEFublc3YWlJNW9jMw==
  HEDERA_ACCOUNT_ID: MC4wLjM0NDAxMTc3
  HEDERA_PRIVATE_KEY: |
    MzAyZTAyMDEwMDMwMDUwNjAzMmI2NTcwMDQyMjA0MjA5OTk1MGE4ZTRkMmU1YWMyN2UxN2
    JjZGFkMmE5Y2QxZDU0NjA3ODE1M2Y2NjY0YWQ4YzAxYWQ1NWE4NDdlMmFk
  HEDERA_TREASURY_ID: MC4wLjM0NDAxMTc3
  HEDERA_TREASURY_KEY: |
    MzAyZTAyMDEwMDMwMDUwNjAzMmI2NTcwMDQyMjA0MjA5OTk1MGE4ZTRkMmU1YWMyN2UxN2
    JjZGFkMmE5Y2QxZDU0NjA3ODE1M2Y2NjY0YWQ4YzAxYWQ1NWE4NDdlMmFk
kind: Secret
metadata:
  name: app-b49m45kfdm
  namespace: staging
type: Opaque
---
apiVersion: v1
data:
  POSTGRES_PASSWORD: Z2VpWW9oazZycGhvb1NoNGk=
  POSTGRES_USER: cG9zdGdyZXM=
kind: Secret
metadata:
  name: postgres-user-cck6f7hmgc
  namespace: staging
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: aidbox
  namespace: staging
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    workload: aidbox
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: aidbox-jvm-exporter
  namespace: staging
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8081
  selector:
    workload: aidbox
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: staging
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    workload: backend
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: dcm-to-png
  namespace: staging
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    workload: dcm-to-png
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: staging
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    workload: frontend
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-master
  namespace: staging
spec:
  ports:
  - name: pg
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    workload: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-master-data
  namespace: staging
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aidbox
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      workload: aidbox
  template:
    metadata:
      labels:
        workload: aidbox
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: aidbox-td48t728k2
        - secretRef:
            name: aidbox-hfg48hch4g
        image: healthsamurai/aidboxone:stable
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /__healthcheck
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        name: aidbox
        ports:
        - containerPort: 8080
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /__healthcheck
            port: 8080
          periodSeconds: 3
        resources:
          limits:
            memory: 3Gi
          requests:
            cpu: 1000m
            memory: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      workload: backend
  template:
    metadata:
      labels:
        workload: backend
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-f494b8kfmd
        - secretRef:
            name: app-b49m45kfdm
        image: bedasoftware/ucfwealth-aidbox-app:latest
        imagePullPolicy: Always
        name: backend
        ports:
        - containerPort: 3000
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcm-to-png
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      workload: dcm-to-png
  template:
    metadata:
      labels:
        workload: dcm-to-png
    spec:
      containers:
      - image: bedasoftware/dcm-to-png:latest
        imagePullPolicy: Always
        name: dcm-to-png
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      workload: frontend
  template:
    metadata:
      labels:
        workload: frontend
    spec:
      containers:
      - image: bedasoftware/ucfwealth-frontend:latest
        imagePullPolicy: Always
        name: frontend
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: 512M
          requests:
            cpu: 500m
            memory: 512M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-master
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      workload: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        workload: postgres
    spec:
      containers:
      - args:
        - -c
        - config_file=/etc/configs/postgresql.conf
        envFrom:
        - configMapRef:
            name: postgres-ckhh955gbg
        - secretRef:
            name: postgres-user-cck6f7hmgc
        image: healthsamurai/aidboxdb:13.2
        imagePullPolicy: Always
        name: db
        ports:
        - containerPort: 5432
        resources:
          limits:
            memory: 8Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /etc/configs
          name: postgres-conf
        - mountPath: /data
          name: postgres-master-data
          subPath: pg
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
      - configMap:
          name: postgres-conf-9d7k5b2k44
        name: postgres-conf
      - name: postgres-master-data
        persistentVolumeClaim:
          claimName: postgres-master-data
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:262339618359:certificate/fd542478-cccb-4dac-ae92-869fc5cea3ca,
      arn:aws:acm:us-east-2:262339618359:certificate/3c655531-cc90-4ed3-b738-a454ace1565a,
      arn:aws:acm:us-east-2:262339618359:certificate/d4ee522a-1624-4d89-bb2f-dbe45b4f9f6e
    alb.ingress.kubernetes.io/group.name: ucfwealth
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-0c3b8fd78ac4dea81, subnet-0d637e0502d740aa5
    kubernetes.io/ingress.class: alb
  name: ucfwealth-ingress
  namespace: staging
spec:
  rules:
  - host: aidbox.ucfwealth.app
    http:
      paths:
      - backend:
          service:
            name: aidbox
            port:
              number: 8080
        path: /*
        pathType: ImplementationSpecific
  - host: ucfwealth.app
    http:
      paths:
      - backend:
          service:
            name: frontend
            port:
              number: 5000
        path: /*
        pathType: ImplementationSpecific
  - host: dcm-to-png.ucfwealth.app
    http:
      paths:
      - backend:
          service:
            name: dcm-to-png
            port:
              number: 8080
        path: /*
        pathType: ImplementationSpecific
