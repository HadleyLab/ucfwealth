{ns hl7-fhir-r4-core.VerificationResult,
 import
 #{hl7-fhir-r4-core.value-set.verificationresult-status
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.value-set.verificationresult-need
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.Timing
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.value-set.verificationresult-validation-type
   hl7-fhir-r4-core.date
   hl7-fhir-r4-core.value-set.verificationresult-validation-status
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.value-set.verificationresult-failure-action
   hl7-fhir-r4-core.value-set.verificationresult-can-push-updates
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.Signature
   hl7-fhir-r4-core.value-set.verificationresult-push-type-available
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Organization},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/VerificationResult",
  :require #{:status},
  :type zen/map,
  :zen/desc
  "Describes validation requirements, source(s), status and dates for one or more elements.",
  :keys
  {:failureAction
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.verificationresult-failure-action/value-set,
     :strength :preferred},
    :zen/desc "fatal | warn | rec-only | none"},
   :validationType
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.verificationresult-validation-type/value-set,
     :strength :preferred},
    :zen/desc "nothing | primary | multiple"},
   :targetLocation
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.string/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "The fhirpath location(s) within the resource that was validated"}},
   :_targetLocation
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :validator
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:organization
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :zen.fhir/reference
       {:refers #{hl7-fhir-r4-core.Organization/schema}},
       :zen/desc
       "Reference to the organization validating information"},
      :identityCertificate
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc
       "A digital identity certificate associated with the validator"},
      :_identityCertificate
      {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :attestationSignature
      {:confirms #{hl7-fhir-r4-core.Signature/schema},
       :zen/desc "Validator signature"}},
     :require #{:organization},
     :zen/desc "Information about the entity validating information"}},
   :need
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.verificationresult-need/value-set,
     :strength :preferred},
    :zen/desc "none | initial | periodic"},
   :frequency
   {:confirms #{hl7-fhir-r4-core.Timing/schema},
    :zen/desc "Frequency of revalidation"},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :nextScheduled
   {:confirms #{hl7-fhir-r4-core.date/schema},
    :zen/desc
    "The date when target is next validated, if appropriate"},
   :primarySource
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:who
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :zen.fhir/reference
       {:refers
        #{hl7-fhir-r4-core.PractitionerRole/schema
          hl7-fhir-r4-core.Organization/schema
          hl7-fhir-r4-core.Practitioner/schema}},
       :zen/desc "Reference to the primary source"},
      :type
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :fhir/flags #{:SU},
        :zen/desc
        "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source)"}},
      :communicationMethod
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :fhir/flags #{:SU},
        :zen/desc
        "Method for exchanging information with the primary source"}},
      :validationStatus
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.verificationresult-validation-status/value-set,
        :strength :preferred},
       :zen/desc "successful | failed | unknown"},
      :validationDate
      {:confirms #{hl7-fhir-r4-core.dateTime/schema},
       :zen/desc
       "When the target was validated against the primary source"},
      :_validationDate {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :canPushUpdates
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.verificationresult-can-push-updates/value-set,
        :strength :preferred},
       :zen/desc "yes | no | undetermined"},
      :pushTypeAvailable
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :zen.fhir/value-set
        {:symbol
         hl7-fhir-r4-core.value-set.verificationresult-push-type-available/value-set,
         :strength :preferred},
        :zen/desc "specific | any | source"}}},
     :zen/desc
     "Information about the primary source(s) involved in validation"}},
   :attestation
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:who
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :fhir/flags #{:SU},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.PractitionerRole/schema
         hl7-fhir-r4-core.Organization/schema
         hl7-fhir-r4-core.Practitioner/schema}},
      :zen/desc
      "The individual or organization attesting to information"},
     :date
     {:confirms #{hl7-fhir-r4-core.date/schema},
      :fhir/flags #{:SU},
      :zen/desc "The date the information was attested to"},
     :proxyIdentityCertificate
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :zen/desc
      "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source"},
     :sourceSignature
     {:confirms #{hl7-fhir-r4-core.Signature/schema},
      :zen/desc "Attester signature"},
     :onBehalfOf
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :fhir/flags #{:SU},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.PractitionerRole/schema
         hl7-fhir-r4-core.Organization/schema
         hl7-fhir-r4-core.Practitioner/schema}},
      :zen/desc
      "When the who is asserting on behalf of another (organization or individual)"},
     :_proxyIdentityCertificate
     {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :proxySignature
     {:confirms #{hl7-fhir-r4-core.Signature/schema},
      :zen/desc "Proxy signature"},
     :communicationMethod
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :fhir/flags #{:SU},
      :zen/desc
      "The method by which attested information was submitted/retrieved"},
     :_sourceIdentityCertificate
     {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :sourceIdentityCertificate
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :zen/desc
      "A digital identity certificate associated with the attestation source"}},
    :zen/desc "Information about the entity attesting to information"},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.verificationresult-status/value-set,
     :strength :required},
    :zen/desc
    "attested | validated | in-process | req-revalid | val-fail | reval-fail"},
   :validationProcess
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context)"}},
   :statusDate
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "When the validation status was updated"},
   :target
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference {:refers #{}},
     :zen/desc "A resource that was validated"}},
   :_lastPerformed {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_nextScheduled {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :lastPerformed
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :zen/desc
    "The date/time validation was last completed (including failed validations)"},
   :_statusDate {:confirms #{hl7-fhir-r4-core.Element/schema}}},
  :zen.fhir/type "VerificationResult"}}