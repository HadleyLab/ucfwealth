{ns hl7-fhir-r4-core.ldlcholesterol,
 import
 #{hl7-fhir-r4-core.Observation
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.SimpleQuantity
   zen.fhir
   hl7-fhir-r4-core.value-set.ldlcholesterol-codes
   hl7-fhir-r4-core.Annotation
   hl7-fhir-r4-core.Range
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.CodeableConcept},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms #{hl7-fhir-r4-core.Observation/schema zen.fhir/Resource},
  :zen/tags #{zen.fhir/profile-schema zen/schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/ldlcholesterol",
  :require #{:referenceRange :code},
  :type zen/map,
  :zen/desc "LDL Cholesterol Result",
  :keys
  {:code
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:MS},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.ldlcholesterol-codes/value-set,
     :strength :required},
    :zen/desc "LDL Cholesterol -measured or calculated per code"},
   :value
   {:confirms #{hl7-fhir-r4-core.Quantity/schema},
    :type zen/map,
    :keys
    {:Quantity
     {:confirms #{hl7-fhir-r4-core.Quantity/schema},
      :fhir/flags #{:MS},
      :zen/desc "LDL Cholesterol value"}}},
   :interpretation
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:MS},
     :zen/desc "+ | ++ | +++ | - | -- | ---"},
    :maxItems 1},
   :note
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Annotation/schema},
     :fhir/flags #{:MS},
     :zen/desc "Comments about result"}},
   :referenceRange
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:low {:confirms #{hl7-fhir-r4-core.Quantity/schema}},
      :high
      {:confirms
       #{hl7-fhir-r4-core.Quantity/schema
         hl7-fhir-r4-core.SimpleQuantity/schema}},
      :type {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
      :appliesTo
      {:type zen/vector,
       :every {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
       :maxItems 0},
      :age {:confirms #{hl7-fhir-r4-core.Range/schema}}},
     :require #{:high},
     :fhir/flags #{:MS}},
    :minItems 1,
    :maxItems 1},
   :hasMember
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference {:refers #{}}},
    :maxItems 0},
   :derivedFrom
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference {:refers #{}}},
    :maxItems 0}},
  :zen.fhir/type "Observation"}}