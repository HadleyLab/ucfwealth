{ns hl7-fhir-r4-core.MedicinalProductPackaged,
 import
 #{hl7-fhir-r4-core.BackboneElement
   zen.fhir
   hl7-fhir-r4-core.MarketingStatus
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.ProdCharacteristic
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.MedicinalProductManufactured
   hl7-fhir-r4-core.DeviceDefinition
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.MedicinalProductAuthorization
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.MedicinalProduct
   hl7-fhir-r4-core.Organization
   hl7-fhir-r4-core.ProductShelfLife},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/MedicinalProductPackaged",
  :require #{:packageItem},
  :type zen/map,
  :zen/desc "A medicinal product in a container or package.",
  :keys
  {:description
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Textual description"},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :marketingStatus
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.MarketingStatus/schema},
     :fhir/flags #{:SU},
     :zen/desc "Marketing information"}},
   :marketingAuthorization
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers #{hl7-fhir-r4-core.MedicinalProductAuthorization/schema}},
    :zen/desc "Manufacturer of this Package Item"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "Unique identifier"}},
   :manufacturer
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.Organization/schema}},
     :zen/desc "Manufacturer of this Package Item"}},
   :legalStatusOfSupply
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "The legal status of supply of the medicinal product as classified by the regulator"},
   :batchIdentifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:outerPackaging
      {:confirms #{hl7-fhir-r4-core.Identifier/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "A number appearing on the outer packaging of a specific batch"},
      :immediatePackaging
      {:confirms #{hl7-fhir-r4-core.Identifier/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "A number appearing on the immediate packaging (and not the outer packaging)"}},
     :require #{:outerPackaging},
     :fhir/flags #{:SU},
     :zen/desc "Batch numbering"}},
   :subject
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.MedicinalProduct/schema}},
     :zen/desc "The product with this is a pack for"}},
   :packageItem
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:manufacturedItem
      {:type zen/vector,
       :every
       {:confirms
        #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
        :fhir/flags #{:SU},
        :zen.fhir/reference
        {:refers
         #{hl7-fhir-r4-core.MedicinalProductManufactured/schema}},
        :zen/desc
        "The manufactured item as contained in the packaged medicinal product"}},
      :otherCharacteristics
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :fhir/flags #{:SU},
        :zen/desc "Other codeable characteristics"}},
      :shelfLifeStorage
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.ProductShelfLife/schema},
        :fhir/flags #{:SU},
        :zen/desc "Shelf Life and storage information"}},
      :alternateMaterial
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :fhir/flags #{:SU},
        :zen/desc "A possible alternate material for the packaging"}},
      :type
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen/desc "The physical type of the container of the medicine"},
      :material
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :fhir/flags #{:SU},
        :zen/desc "Material type of the package item"}},
      :identifier
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.Identifier/schema},
        :fhir/flags #{:SU},
        :zen/desc "Including possibly Data Carrier Identifier"}},
      :manufacturer
      {:type zen/vector,
       :every
       {:confirms
        #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
        :fhir/flags #{:SU},
        :zen.fhir/reference
        {:refers #{hl7-fhir-r4-core.Organization/schema}},
        :zen/desc "Manufacturer of this Package Item"}},
      :device
      {:type zen/vector,
       :every
       {:confirms
        #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
        :fhir/flags #{:SU},
        :zen.fhir/reference
        {:refers #{hl7-fhir-r4-core.DeviceDefinition/schema}},
        :zen/desc "A device accompanying a medicinal product"}},
      :quantity
      {:confirms #{hl7-fhir-r4-core.Quantity/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "The quantity of this package in the medicinal product, at the current level of packaging. The outermost is always 1"},
      :physicalCharacteristics
      {:confirms #{hl7-fhir-r4-core.ProdCharacteristic/schema},
       :fhir/flags #{:SU},
       :zen/desc "Dimensions, color etc."},
      :packageItem
      {:type zen/vector,
       :every
       {:fhir/flags #{:SU},
        :zen/desc "Allows containers within containers"}}},
     :require #{:type :quantity},
     :fhir/flags #{:SU},
     :zen/desc
     "A packaging item, as a contained for medicine, possibly with other packaging items within"},
    :minItems 1}},
  :zen.fhir/type "MedicinalProductPackaged"}}