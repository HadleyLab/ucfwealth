{ns hl7-fhir-r4-core.SampledData,
 import
 #{hl7-fhir-r4-core.decimal
   hl7-fhir-r4-core.SimpleQuantity
   zen.fhir
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.positiveInt
   hl7-fhir-r4-core.Element},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms #{hl7-fhir-r4-core.Element/schema},
  :zen/tags #{zen/schema zen.fhir/structure-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/SampledData",
  :require #{:dimensions :origin :period},
  :type zen/map,
  :zen/desc
  "Base StructureDefinition for SampledData Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
  :keys
  {:_period {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_data {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :upperLimit
   {:confirms #{hl7-fhir-r4-core.decimal/schema},
    :fhir/flags #{:SU},
    :zen/desc "Upper limit of detection"},
   :_lowerLimit {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :lowerLimit
   {:confirms #{hl7-fhir-r4-core.decimal/schema},
    :fhir/flags #{:SU},
    :zen/desc "Lower limit of detection"},
   :_factor {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_upperLimit {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :dimensions
   {:confirms #{hl7-fhir-r4-core.positiveInt/schema},
    :fhir/flags #{:SU},
    :zen/desc "Number of sample points at each time point"},
   :factor
   {:confirms #{hl7-fhir-r4-core.decimal/schema},
    :fhir/flags #{:SU},
    :zen/desc "Multiply data by this before adding to origin"},
   :origin
   {:confirms
    #{hl7-fhir-r4-core.Quantity/schema
      hl7-fhir-r4-core.SimpleQuantity/schema},
    :fhir/flags #{:SU},
    :zen/desc "Zero value and units"},
   :period
   {:confirms #{hl7-fhir-r4-core.decimal/schema},
    :fhir/flags #{:SU},
    :zen/desc "Number of milliseconds between samples"},
   :_dimensions {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :data
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :zen/desc "Decimal values with spaces, or \"E\" | \"U\" | \"L\""}},
  :zen.fhir/type "SampledData"}}