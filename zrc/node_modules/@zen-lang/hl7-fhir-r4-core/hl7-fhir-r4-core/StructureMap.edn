{ns hl7-fhir-r4-core.StructureMap,
 import
 #{hl7-fhir-r4-core.integer
   hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.value-set.map-target-list-mode
   hl7-fhir-r4-core.decimal
   hl7-fhir-r4-core.Duration
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.Ratio
   hl7-fhir-r4-core.time
   hl7-fhir-r4-core.canonical
   hl7-fhir-r4-core.oid
   hl7-fhir-r4-core.ParameterDefinition
   hl7-fhir-r4-core.markdown
   hl7-fhir-r4-core.code
   hl7-fhir-r4-core.url
   zen.fhir
   hl7-fhir-r4-core.value-set.map-source-list-mode
   hl7-fhir-r4-core.Money
   hl7-fhir-r4-core.value-set.publication-status
   hl7-fhir-r4-core.ContactPoint
   hl7-fhir-r4-core.Annotation
   hl7-fhir-r4-core.UsageContext
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.Timing
   hl7-fhir-r4-core.uuid
   hl7-fhir-r4-core.Range
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.instant
   hl7-fhir-r4-core.value-set.map-model-mode
   hl7-fhir-r4-core.Coding
   hl7-fhir-r4-core.date
   hl7-fhir-r4-core.value-set.map-input-mode
   hl7-fhir-r4-core.Dosage
   hl7-fhir-r4-core.HumanName
   hl7-fhir-r4-core.SampledData
   hl7-fhir-r4-core.id
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.value-set.map-group-type-mode
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.value-set.map-context-type
   hl7-fhir-r4-core.unsignedInt
   hl7-fhir-r4-core.RelatedArtifact
   hl7-fhir-r4-core.Meta
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.Attachment
   hl7-fhir-r4-core.base64Binary
   hl7-fhir-r4-core.ContactDetail
   hl7-fhir-r4-core.positiveInt
   hl7-fhir-r4-core.DataRequirement
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.value-set.map-transform
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Signature
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.TriggerDefinition
   hl7-fhir-r4-core.Count
   hl7-fhir-r4-core.Age
   hl7-fhir-r4-core.Contributor
   hl7-fhir-r4-core.Distance
   hl7-fhir-r4-core.Expression
   hl7-fhir-r4-core.Address},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/StructureMap",
  :require #{:group :name :status :url},
  :type zen/map,
  :zen/desc
  "A Map of relationships between 2 structures that can be used to transform data.",
  :keys
  {:description
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Natural language description of the structure map"},
   :date
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "Date last changed"},
   :_import
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :group
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:_documentation {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :extends
      {:confirms #{hl7-fhir-r4-core.id/schema},
       :fhir/flags #{:SU},
       :zen/desc "Another group that this group adds rules to"},
      :_extends {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :typeMode
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.map-group-type-mode/value-set,
        :strength :required},
       :zen/desc "none | types | type-and-types"},
      :name
      {:confirms #{hl7-fhir-r4-core.id/schema},
       :fhir/flags #{:SU},
       :zen/desc "Human-readable label"},
      :rule
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:name
         {:confirms #{hl7-fhir-r4-core.id/schema},
          :fhir/flags #{:SU},
          :zen/desc "Name of the rule for internal references"},
         :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :source
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:min
            {:confirms #{hl7-fhir-r4-core.integer/schema},
             :fhir/flags #{:SU},
             :zen/desc "Specified minimum cardinality"},
            :variable
            {:confirms #{hl7-fhir-r4-core.id/schema},
             :fhir/flags #{:SU},
             :zen/desc
             "Named context for field, if a field is specified"},
            :element
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc "Optional field for this source"},
            :check
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc
             "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing"},
            :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :type
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc "Rule only applies if source has this type"},
            :logMessage
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc
             "Message to put in log if source exists (FHIRPath)"},
            :_min {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_logMessage
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_condition {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :max
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc "Specified maximum cardinality (number or *)"},
            :condition
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc
             "FHIRPath expression  - must be true or the rule does not apply"},
            :context
            {:confirms #{hl7-fhir-r4-core.id/schema},
             :fhir/flags #{:SU},
             :zen/desc "Type or variable this rule applies to"},
            :_check {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_max {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_element {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :listMode
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :fhir/flags #{:SU},
             :zen.fhir/value-set
             {:symbol
              hl7-fhir-r4-core.value-set.map-source-list-mode/value-set,
              :strength :required},
             :zen/desc
             "first | not_first | last | not_last | only_one"},
            :defaultValue
            {:fhir/polymorphic true,
             :exclusive-keys
             #{#{:unsignedInt
                 :Signature
                 :markdown
                 :date
                 :Dosage
                 :ContactDetail
                 :RelatedArtifact
                 :instant
                 :UsageContext
                 :time
                 :DataRequirement
                 :base64Binary
                 :Meta
                 :Distance
                 :SampledData
                 :TriggerDefinition
                 :Identifier
                 :string
                 :Address
                 :Expression
                 :dateTime
                 :Range
                 :integer
                 :Ratio
                 :oid
                 :ContactPoint
                 :Money
                 :decimal
                 :id
                 :Attachment
                 :Contributor
                 :Period
                 :canonical
                 :url
                 :code
                 :HumanName
                 :positiveInt
                 :ParameterDefinition
                 :Coding
                 :Timing
                 :Duration
                 :uri
                 :CodeableConcept
                 :uuid
                 :Count
                 :Quantity
                 :boolean
                 :Annotation
                 :Age
                 :Reference}},
             :type zen/map,
             :keys
             {:_decimal {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :unsignedInt
              {:confirms #{hl7-fhir-r4-core.unsignedInt/schema}},
              :Signature
              {:confirms #{hl7-fhir-r4-core.Signature/schema}},
              :markdown
              {:confirms #{hl7-fhir-r4-core.markdown/schema}},
              :_id {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :date {:confirms #{hl7-fhir-r4-core.date/schema}},
              :_canonical
              {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :Dosage {:confirms #{hl7-fhir-r4-core.Dosage/schema}},
              :ContactDetail
              {:confirms #{hl7-fhir-r4-core.ContactDetail/schema}},
              :RelatedArtifact
              {:confirms #{hl7-fhir-r4-core.RelatedArtifact/schema}},
              :instant {:confirms #{hl7-fhir-r4-core.instant/schema}},
              :_positiveInt
              {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_uri {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_dateTime
              {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :UsageContext
              {:confirms #{hl7-fhir-r4-core.UsageContext/schema}},
              :time {:confirms #{hl7-fhir-r4-core.time/schema}},
              :DataRequirement
              {:confirms #{hl7-fhir-r4-core.DataRequirement/schema}},
              :base64Binary
              {:confirms #{hl7-fhir-r4-core.base64Binary/schema}},
              :Meta {:confirms #{hl7-fhir-r4-core.Meta/schema}},
              :Distance
              {:confirms #{hl7-fhir-r4-core.Distance/schema}},
              :SampledData
              {:confirms #{hl7-fhir-r4-core.SampledData/schema}},
              :TriggerDefinition
              {:confirms #{hl7-fhir-r4-core.TriggerDefinition/schema}},
              :Identifier
              {:confirms #{hl7-fhir-r4-core.Identifier/schema}},
              :string {:confirms #{hl7-fhir-r4-core.string/schema}},
              :Address {:confirms #{hl7-fhir-r4-core.Address/schema}},
              :Expression
              {:confirms #{hl7-fhir-r4-core.Expression/schema}},
              :dateTime
              {:confirms #{hl7-fhir-r4-core.dateTime/schema}},
              :_time {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :Range {:confirms #{hl7-fhir-r4-core.Range/schema}},
              :integer {:confirms #{hl7-fhir-r4-core.integer/schema}},
              :Ratio {:confirms #{hl7-fhir-r4-core.Ratio/schema}},
              :oid {:confirms #{hl7-fhir-r4-core.oid/schema}},
              :ContactPoint
              {:confirms #{hl7-fhir-r4-core.ContactPoint/schema}},
              :Money {:confirms #{hl7-fhir-r4-core.Money/schema}},
              :_boolean {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :decimal {:confirms #{hl7-fhir-r4-core.decimal/schema}},
              :id {:confirms #{hl7-fhir-r4-core.id/schema}},
              :Attachment
              {:confirms #{hl7-fhir-r4-core.Attachment/schema}},
              :Contributor
              {:confirms #{hl7-fhir-r4-core.Contributor/schema}},
              :Period {:confirms #{hl7-fhir-r4-core.Period/schema}},
              :_base64Binary
              {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :canonical
              {:confirms #{hl7-fhir-r4-core.canonical/schema}},
              :url {:confirms #{hl7-fhir-r4-core.url/schema}},
              :code {:confirms #{hl7-fhir-r4-core.code/schema}},
              :HumanName
              {:confirms #{hl7-fhir-r4-core.HumanName/schema}},
              :positiveInt
              {:confirms #{hl7-fhir-r4-core.positiveInt/schema}},
              :ParameterDefinition
              {:confirms
               #{hl7-fhir-r4-core.ParameterDefinition/schema}},
              :Coding {:confirms #{hl7-fhir-r4-core.Coding/schema}},
              :_markdown
              {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :Timing {:confirms #{hl7-fhir-r4-core.Timing/schema}},
              :_uuid {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_integer {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :Duration
              {:confirms #{hl7-fhir-r4-core.Duration/schema}},
              :uri {:confirms #{hl7-fhir-r4-core.uri/schema}},
              :CodeableConcept
              {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
              :uuid {:confirms #{hl7-fhir-r4-core.uuid/schema}},
              :Count {:confirms #{hl7-fhir-r4-core.Count/schema}},
              :Quantity
              {:confirms #{hl7-fhir-r4-core.Quantity/schema}},
              :_instant {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_oid {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :boolean {:confirms #{hl7-fhir-r4-core.boolean/schema}},
              :_unsignedInt
              {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_url {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :_string {:confirms #{hl7-fhir-r4-core.Element/schema}},
              :Annotation
              {:confirms #{hl7-fhir-r4-core.Annotation/schema}},
              :Age {:confirms #{hl7-fhir-r4-core.Age/schema}},
              :Reference
              {:confirms
               #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
               :zen.fhir/reference {:refers #{}}}},
             :fhir/flags #{:SU},
             :zen/desc "Default value if no value exists"},
            :_listMode {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_variable {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_context {:confirms #{hl7-fhir-r4-core.Element/schema}}},
           :require #{:context},
           :fhir/flags #{:SU},
           :zen/desc "Source inputs to the mapping"},
          :minItems 1},
         :target
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:transform
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :fhir/flags #{:SU},
             :zen.fhir/value-set
             {:symbol
              hl7-fhir-r4-core.value-set.map-transform/value-set,
              :strength :required},
             :zen/desc "create | copy +"},
            :variable
            {:confirms #{hl7-fhir-r4-core.id/schema},
             :fhir/flags #{:SU},
             :zen/desc
             "Named context for field, if desired, and a field is specified"},
            :element
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc "Field to create in the context"},
            :listRuleId
            {:confirms #{hl7-fhir-r4-core.id/schema},
             :fhir/flags #{:SU},
             :zen/desc
             "Internal rule reference for shared list items"},
            :_transform {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :context
            {:confirms #{hl7-fhir-r4-core.id/schema},
             :fhir/flags #{:SU},
             :zen/desc "Type or variable this rule applies to"},
            :_element {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :listMode
            {:type zen/vector,
             :every
             {:confirms #{hl7-fhir-r4-core.code/schema},
              :fhir/flags #{:SU},
              :zen.fhir/value-set
              {:symbol
               hl7-fhir-r4-core.value-set.map-target-list-mode/value-set,
               :strength :required},
              :zen/desc "first | share | last | collate"}},
            :_listRuleId
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_listMode
            {:type zen/vector,
             :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
            :_contextType
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :contextType
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :fhir/flags #{:SU},
             :zen.fhir/value-set
             {:symbol
              hl7-fhir-r4-core.value-set.map-context-type/value-set,
              :strength :required},
             :zen/desc "type | variable"},
            :_variable {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :parameter
            {:type zen/vector,
             :every
             {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
              :type zen/map,
              :keys
              {:value
               {:fhir/polymorphic true,
                :exclusive-keys
                #{#{:string :integer :decimal :id :boolean}},
                :type zen/map,
                :keys
                {:_decimal
                 {:confirms #{hl7-fhir-r4-core.Element/schema}},
                 :_id {:confirms #{hl7-fhir-r4-core.Element/schema}},
                 :string {:confirms #{hl7-fhir-r4-core.string/schema}},
                 :integer
                 {:confirms #{hl7-fhir-r4-core.integer/schema}},
                 :_boolean
                 {:confirms #{hl7-fhir-r4-core.Element/schema}},
                 :decimal
                 {:confirms #{hl7-fhir-r4-core.decimal/schema}},
                 :id {:confirms #{hl7-fhir-r4-core.id/schema}},
                 :_integer
                 {:confirms #{hl7-fhir-r4-core.Element/schema}},
                 :boolean
                 {:confirms #{hl7-fhir-r4-core.boolean/schema}},
                 :_string
                 {:confirms #{hl7-fhir-r4-core.Element/schema}}},
                :fhir/flags #{:SU},
                :zen/desc "Parameter value - variable or literal"}},
              :require #{:value},
              :fhir/flags #{:SU},
              :zen/desc "Parameters to the transform"}},
            :_context {:confirms #{hl7-fhir-r4-core.Element/schema}}},
           :fhir/flags #{:SU},
           :zen/desc
           "Content to create because of this mapping rule"}},
         :rule
         {:type zen/vector,
          :every
          {:fhir/flags #{:SU},
           :zen/desc "Rules contained in this rule"}},
         :dependent
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:name
            {:confirms #{hl7-fhir-r4-core.id/schema},
             :fhir/flags #{:SU},
             :zen/desc "Name of a rule or group to apply"},
            :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :variable
            {:type zen/vector,
             :every
             {:confirms #{hl7-fhir-r4-core.string/schema},
              :fhir/flags #{:SU},
              :zen/desc "Variable to pass to the rule or group"},
             :minItems 1},
            :_variable
            {:type zen/vector,
             :every {:confirms #{hl7-fhir-r4-core.Element/schema}}}},
           :require #{:variable :name},
           :fhir/flags #{:SU},
           :zen/desc
           "Which other rules to apply in the context of this rule"}},
         :documentation
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :zen/desc "Documentation for this instance of data"},
         :_documentation
         {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :require #{:name :source},
        :fhir/flags #{:SU},
        :zen/desc "Transform Rule from source to target"},
       :minItems 1},
      :_typeMode {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :documentation
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Additional description/explanation for group"},
      :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :input
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:name
         {:confirms #{hl7-fhir-r4-core.id/schema},
          :fhir/flags #{:SU},
          :zen/desc "Name for this instance of data"},
         :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :type
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :fhir/flags #{:SU},
          :zen/desc "Type for this instance of data"},
         :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :mode
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :fhir/flags #{:SU},
          :zen.fhir/value-set
          {:symbol hl7-fhir-r4-core.value-set.map-input-mode/value-set,
           :strength :required},
          :zen/desc "source | target"},
         :_mode {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :documentation
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :zen/desc "Documentation for this instance of data"},
         :_documentation
         {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :require #{:name :mode},
        :fhir/flags #{:SU},
        :zen/desc "Named instance provided when invoking the map"},
       :minItems 1}},
     :require #{:typeMode :name :rule :input},
     :fhir/flags #{:SU},
     :zen/desc "Named sections for reader convenience"},
    :minItems 1},
   :publisher
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name of the publisher (organization or individual)"},
   :jurisdiction
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Intended jurisdiction for structure map (if applicable)"}},
   :_publisher {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :purpose
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Why this structure map is defined"},
   :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :name
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name for this structure map (computer friendly)"},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_experimental {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :useContext
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.UsageContext/schema},
     :fhir/flags #{:SU},
     :zen/desc "The context that the content is intended to support"}},
   :copyright
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Use and/or publishing restrictions"},
   :experimental
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "For testing purposes, not real usage"},
   :title
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name for this structure map (human friendly)"},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_purpose {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :structure
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:url
      {:confirms #{hl7-fhir-r4-core.canonical/schema},
       :fhir/flags #{:SU},
       :zen/desc "Canonical reference to structure definition"},
      :_url {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :mode
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.map-model-mode/value-set,
        :strength :required},
       :zen/desc "source | queried | target | produced"},
      :_mode {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :alias
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Name for type in this map"},
      :_alias {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :documentation
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Documentation on use of structure"},
      :_documentation {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:mode :url},
     :fhir/flags #{:SU},
     :zen/desc "Structure Definition used by this map"}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.publication-status/value-set,
     :strength :required},
    :zen/desc "draft | active | retired | unknown"},
   :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :url
   {:confirms #{hl7-fhir-r4-core.uri/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Canonical identifier for this structure map, represented as a URI (globally unique)"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "Additional identifier for the structure map"}},
   :_copyright {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_title {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :version
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Business version of the structure map"},
   :_version {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :import
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.canonical/schema},
     :fhir/flags #{:SU},
     :zen/desc "Other maps used by this map (canonical URLs)"}},
   :contact
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.ContactDetail/schema},
     :fhir/flags #{:SU},
     :zen/desc "Contact details for the publisher"}},
   :_url {:confirms #{hl7-fhir-r4-core.Element/schema}}},
  :zen.fhir/type "StructureMap"}}