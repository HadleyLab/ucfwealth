{ns hl7-fhir-r4-core.OperationDefinition,
 import
 #{hl7-fhir-r4-core.integer
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.canonical
   hl7-fhir-r4-core.value-set.resource-types
   hl7-fhir-r4-core.markdown
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.value-set.publication-status
   hl7-fhir-r4-core.value-set.operation-kind
   hl7-fhir-r4-core.UsageContext
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.value-set.binding-strength
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.value-set.all-types
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.ContactDetail
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.value-set.operation-parameter-use
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.value-set.search-param-type},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/OperationDefinition",
  :require #{:system :instance :name :type :status :kind :code},
  :type zen/map,
  :zen/desc
  "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
  :keys
  {:_base {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :description
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc
    "Natural language description of the operation definition"},
   :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_kind {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :date
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "Date last changed"},
   :system
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Invoke at the system level?"},
   :publisher
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name of the publisher (organization or individual)"},
   :instance
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Invoke on an instance?"},
   :jurisdiction
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Intended jurisdiction for operation definition (if applicable)"}},
   :_publisher {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :purpose
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Why this operation definition is defined"},
   :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :name
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Name for this operation definition (computer friendly)"},
   :_outputProfile {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_experimental {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :useContext
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.UsageContext/schema},
     :fhir/flags #{:SU},
     :zen/desc "The context that the content is intended to support"}},
   :type
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Invoke at the type level?"},
   :overload
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:parameterName
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.string/schema},
        :zen/desc "Name of parameter to include in overload"}},
      :_parameterName
      {:type zen/vector,
       :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
      :comment
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Comments to go on overload"},
      :_comment {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :zen/desc
     "Define overloaded variants for when  generating code"}},
   :experimental
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "For testing purposes, not real usage"},
   :outputProfile
   {:confirms #{hl7-fhir-r4-core.canonical/schema},
    :zen/desc "Validation information for out parameters"},
   :title
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name for this operation definition (human friendly)"},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_purpose {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_resource
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.publication-status/value-set,
     :strength :required},
    :zen/desc "draft | active | retired | unknown"},
   :resource
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.code/schema},
     :fhir/flags #{:SU},
     :zen.fhir/value-set
     {:symbol hl7-fhir-r4-core.value-set.resource-types/value-set,
      :strength :required},
     :zen/desc "Types this operation applies to"}},
   :affectsState
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Whether content is changed by the operation"},
   :kind
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.operation-kind/value-set,
     :strength :required},
    :zen/desc "operation | query"},
   :comment
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Additional information about use"},
   :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :url
   {:confirms #{hl7-fhir-r4-core.uri/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Canonical identifier for this operation definition, represented as a URI (globally unique)"},
   :code
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name used to invoke the operation"},
   :_title {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_instance {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_system {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :base
   {:confirms #{hl7-fhir-r4-core.canonical/schema},
    :fhir/flags #{:SU},
    :zen/desc "Marks this as a profile of the base"},
   :version
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Business version of the operation definition"},
   :_version {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_inputProfile {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :contact
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.ContactDetail/schema},
     :fhir/flags #{:SU},
     :zen/desc "Contact details for the publisher"}},
   :inputProfile
   {:confirms #{hl7-fhir-r4-core.canonical/schema},
    :zen/desc "Validation information for in parameters"},
   :_comment {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_affectsState {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :parameter
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:min
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :zen/desc "Minimum Cardinality"},
      :_documentation {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_searchType {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :searchType
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.search-param-type/value-set,
        :strength :required},
       :zen/desc
       "number | date | string | token | reference | composite | quantity | uri | special"},
      :use
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.operation-parameter-use/value-set,
        :strength :required},
       :zen/desc "in | out"},
      :name
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen/desc "Name in Parameters.parameter.name or in URL"},
      :part
      {:type zen/vector,
       :every #:zen{:desc "Parts of a nested Parameter"}},
      :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :type
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.all-types/value-set,
        :strength :required},
       :zen/desc "What type this parameter has"},
      :referencedFrom
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:source
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :zen/desc "Referencing parameter"},
         :_source {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :sourceId
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :zen/desc "Element id of reference"},
         :_sourceId {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :require #{:source},
        :zen/desc "References to this parameter"}},
      :documentation
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Description of meaning/use"},
      :_min {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :binding
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:strength
        {:confirms #{hl7-fhir-r4-core.code/schema},
         :zen.fhir/value-set
         {:symbol
          hl7-fhir-r4-core.value-set.binding-strength/value-set,
          :strength :required},
         :zen/desc "required | extensible | preferred | example"},
        :_strength {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :valueSet
        {:confirms #{hl7-fhir-r4-core.canonical/schema},
         :zen/desc "Source of value set"},
        :_valueSet {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :require #{:strength :valueSet},
       :zen/desc "ValueSet details if this is coded"},
      :max
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Maximum Cardinality (a number or *)"},
      :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :targetProfile
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.canonical/schema},
        :zen/desc
        "If type is Reference | canonical, allowed targets"}},
      :_max {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_targetProfile
      {:type zen/vector,
       :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
      :_use {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:min :use :name :max},
     :zen/desc "Parameters for the operation/query"}},
   :_url {:confirms #{hl7-fhir-r4-core.Element/schema}}},
  :zen.fhir/type "OperationDefinition"}}