{ns hl7-fhir-r4-core.TerminologyCapabilities,
 import
 #{hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.canonical
   hl7-fhir-r4-core.markdown
   hl7-fhir-r4-core.code
   hl7-fhir-r4-core.url
   zen.fhir
   hl7-fhir-r4-core.value-set.publication-status
   hl7-fhir-r4-core.value-set.code-search-support
   hl7-fhir-r4-core.UsageContext
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.ContactDetail
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.value-set.capability-statement-kind},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/TerminologyCapabilities",
  :require #{:date :status :kind},
  :type zen/map,
  :zen/desc
  "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
  :keys
  {:description
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc
    "Natural language description of the terminology capabilities"},
   :_kind {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :date
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "Date last changed"},
   :publisher
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name of the publisher (organization or individual)"},
   :jurisdiction
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Intended jurisdiction for terminology capabilities (if applicable)"}},
   :_publisher {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :purpose
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Why this terminology capabilities is defined"},
   :_lockedDate {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_codeSearch {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :name
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Name for this terminology capabilities (computer friendly)"},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_experimental {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :useContext
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.UsageContext/schema},
     :fhir/flags #{:SU},
     :zen/desc "The context that the content is intended to support"}},
   :copyright
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :fhir/flags #{:SU},
    :zen/desc "Use and/or publishing restrictions"},
   :experimental
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "For testing purposes, not real usage"},
   :expansion
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:hierarchical
     {:confirms #{hl7-fhir-r4-core.boolean/schema},
      :zen/desc "Whether the server can return nested value sets"},
     :_incomplete {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_paging {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :textFilter
     {:confirms #{hl7-fhir-r4-core.markdown/schema},
      :zen/desc "Documentation about text searching works"},
     :incomplete
     {:confirms #{hl7-fhir-r4-core.boolean/schema},
      :zen/desc "Allow request for incomplete expansions?"},
     :paging
     {:confirms #{hl7-fhir-r4-core.boolean/schema},
      :zen/desc "Whether the server supports paging on expansion"},
     :_textFilter {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_hierarchical {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :parameter
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:name
        {:confirms #{hl7-fhir-r4-core.code/schema},
         :zen/desc "Expansion Parameter name"},
        :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :documentation
        {:confirms #{hl7-fhir-r4-core.string/schema},
         :zen/desc "Description of support for parameter"},
        :_documentation
        {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :require #{:name},
       :zen/desc "Supported expansion parameter"}}},
    :zen/desc
    "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation"},
   :title
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Name for this terminology capabilities (human friendly)"},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_purpose {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.publication-status/value-set,
     :strength :required},
    :zen/desc "draft | active | retired | unknown"},
   :validateCode
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:translations
     {:confirms #{hl7-fhir-r4-core.boolean/schema},
      :zen/desc "Whether translations are validated"},
     :_translations {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :require #{:translations},
    :zen/desc
    "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation"},
   :kind
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.capability-statement-kind/value-set,
     :strength :required},
    :zen/desc "instance | capability | requirements"},
   :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :translation
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:needsMap
     {:confirms #{hl7-fhir-r4-core.boolean/schema},
      :zen/desc "Whether the client must identify the map"},
     :_needsMap {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :require #{:needsMap},
    :zen/desc
    "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation"},
   :url
   {:confirms #{hl7-fhir-r4-core.uri/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Canonical identifier for this terminology capabilities, represented as a URI (globally unique)"},
   :_copyright {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_title {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :codeSystem
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:uri
      {:confirms #{hl7-fhir-r4-core.canonical/schema},
       :zen/desc "URI for the Code System"},
      :_uri {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :version
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :isDefault
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :fhir/flags #{:SU},
          :zen/desc
          "If this is the default version for this code system"},
         :property
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.code/schema},
           :zen/desc "Properties supported for $lookup"}},
         :_language
         {:type zen/vector,
          :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
         :filter
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:code
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :zen/desc "Code of the property supported"},
            :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :op
            {:type zen/vector,
             :every
             {:confirms #{hl7-fhir-r4-core.code/schema},
              :zen/desc "Operations supported for the property"},
             :minItems 1},
            :_op
            {:type zen/vector,
             :every {:confirms #{hl7-fhir-r4-core.Element/schema}}}},
           :require #{:op :code},
           :zen/desc "Filter Properties supported"}},
         :compositional
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :zen/desc "If compositional grammar is supported"},
         :language
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.code/schema},
           :zen/desc "Language Displays supported"}},
         :_isDefault {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :code
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :fhir/flags #{:SU},
          :zen/desc "Version identifier for this version"},
         :_compositional
         {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :_property
         {:type zen/vector,
          :every {:confirms #{hl7-fhir-r4-core.Element/schema}}}},
        :zen/desc "Version of Code System supported"}},
      :subsumption
      {:confirms #{hl7-fhir-r4-core.boolean/schema},
       :zen/desc "Whether subsumption is supported"},
      :_subsumption {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :zen/desc "A code system supported by the server"}},
   :software
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:name
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "A name the software is known by"},
     :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :version
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "Version covered by this statement"},
     :_version {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :require #{:name},
    :fhir/flags #{:SU},
    :zen/desc
    "Software that is covered by this terminology capability statement"},
   :version
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Business version of the terminology capabilities"},
   :_version {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :contact
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.ContactDetail/schema},
     :fhir/flags #{:SU},
     :zen/desc "Contact details for the publisher"}},
   :implementation
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:description
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "Describes this specific instance"},
     :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :url
     {:confirms #{hl7-fhir-r4-core.url/schema},
      :fhir/flags #{:SU},
      :zen/desc "Base URL for the implementation"},
     :_url {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :require #{:description},
    :fhir/flags #{:SU},
    :zen/desc "If this describes a specific instance"},
   :_url {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :codeSearch
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.code-search-support/value-set,
     :strength :required},
    :zen/desc "explicit | all"},
   :lockedDate
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Whether lockedDate is supported"},
   :closure
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:translation
     {:confirms #{hl7-fhir-r4-core.boolean/schema},
      :zen/desc "If cross-system closure is supported"},
     :_translation {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :zen/desc
    "Information about the [ConceptMap/$closure](conceptmap-operation-closure.html) operation"}},
  :zen.fhir/type "TerminologyCapabilities"}}