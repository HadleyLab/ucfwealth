{ns hl7-fhir-r4-core.CapabilityStatement,
 import
 #{hl7-fhir-r4-core.value-set.mimetypes
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.canonical
   hl7-fhir-r4-core.value-set.resource-types
   hl7-fhir-r4-core.value-set.versioning-policy
   hl7-fhir-r4-core.value-set.event-capability-mode
   hl7-fhir-r4-core.markdown
   hl7-fhir-r4-core.code
   hl7-fhir-r4-core.url
   zen.fhir
   hl7-fhir-r4-core.value-set.publication-status
   hl7-fhir-r4-core.UsageContext
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.value-set.conditional-read-status
   hl7-fhir-r4-core.Coding
   hl7-fhir-r4-core.value-set.FHIR-version
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.value-set.type-restful-interaction
   hl7-fhir-r4-core.unsignedInt
   hl7-fhir-r4-core.value-set.system-restful-interaction
   hl7-fhir-r4-core.value-set.reference-handling-policy
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.ContactDetail
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.value-set.restful-capability-mode
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.value-set.search-param-type
   hl7-fhir-r4-core.value-set.capability-statement-kind
   hl7-fhir-r4-core.Organization
   hl7-fhir-r4-core.value-set.document-mode
   hl7-fhir-r4-core.value-set.conditional-delete-status},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/CapabilityStatement",
  :require #{:format :date :fhirVersion :status :kind},
  :type zen/map,
  :zen/desc
  "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
  :keys
  {:description
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc
    "Natural language description of the capability statement"},
   :_kind {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :format
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.code/schema},
     :fhir/flags #{:SU},
     :zen.fhir/value-set
     {:symbol hl7-fhir-r4-core.value-set.mimetypes/value-set,
      :strength :required},
     :zen/desc "formats supported (xml | json | ttl | mime type)"},
    :minItems 1},
   :_patchFormat
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :_imports
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :_format
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :date
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "Date last changed"},
   :publisher
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name of the publisher (organization or individual)"},
   :patchFormat
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.code/schema},
     :fhir/flags #{:SU},
     :zen.fhir/value-set
     {:symbol hl7-fhir-r4-core.value-set.mimetypes/value-set,
      :strength :required},
     :zen/desc "Patch formats supported"}},
   :fhirVersion
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.FHIR-version/value-set,
     :strength :required},
    :zen/desc "FHIR Version the system supports"},
   :jurisdiction
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Intended jurisdiction for capability statement (if applicable)"}},
   :_publisher {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :instantiates
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.canonical/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Canonical URL of another capability statement this implements"}},
   :purpose
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Why this capability statement is defined"},
   :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :name
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Name for this capability statement (computer friendly)"},
   :_instantiates
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_fhirVersion {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_experimental {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :useContext
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.UsageContext/schema},
     :fhir/flags #{:SU},
     :zen/desc "The context that the content is intended to support"}},
   :copyright
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Use and/or publishing restrictions"},
   :experimental
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "For testing purposes, not real usage"},
   :imports
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.canonical/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Canonical URL of another capability statement this adds to"}},
   :title
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name for this capability statement (human friendly)"},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :document
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:mode
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.document-mode/value-set,
        :strength :required},
       :zen/desc "producer | consumer"},
      :_mode {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :documentation
      {:confirms #{hl7-fhir-r4-core.markdown/schema},
       :zen/desc "Description of document support"},
      :_documentation {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :profile
      {:confirms #{hl7-fhir-r4-core.canonical/schema},
       :fhir/flags #{:SU},
       :zen/desc "Constraint on the resources used in the document"},
      :_profile {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:mode :profile},
     :fhir/flags #{:SU},
     :zen/desc "Document definition"}},
   :_purpose {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.publication-status/value-set,
     :strength :required},
    :zen/desc "draft | active | retired | unknown"},
   :messaging
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:endpoint
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:protocol
         {:confirms #{hl7-fhir-r4-core.Coding/schema},
          :zen/desc "http | ftp | mllp +"},
         :address
         {:confirms #{hl7-fhir-r4-core.url/schema},
          :zen/desc "Network address or identifier of the end-point"},
         :_address {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :require #{:address :protocol},
        :zen/desc "Where messages should be sent"}},
      :reliableCache
      {:confirms #{hl7-fhir-r4-core.unsignedInt/schema},
       :zen/desc "Reliable Message Cache Length (min)"},
      :_reliableCache {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :documentation
      {:confirms #{hl7-fhir-r4-core.markdown/schema},
       :zen/desc "Messaging interface behavior details"},
      :_documentation {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :supportedMessage
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:mode
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :fhir/flags #{:SU},
          :zen.fhir/value-set
          {:symbol
           hl7-fhir-r4-core.value-set.event-capability-mode/value-set,
           :strength :required},
          :zen/desc "sender | receiver"},
         :_mode {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :definition
         {:confirms #{hl7-fhir-r4-core.canonical/schema},
          :fhir/flags #{:SU},
          :zen/desc "Message supported by this system"},
         :_definition {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :require #{:definition :mode},
        :fhir/flags #{:SU},
        :zen/desc "Messages supported by this system"}}},
     :fhir/flags #{:SU},
     :zen/desc "If messaging is supported"}},
   :kind
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.capability-statement-kind/value-set,
     :strength :required},
    :zen/desc "instance | capability | requirements"},
   :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :implementationGuide
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.canonical/schema},
     :fhir/flags #{:SU},
     :zen/desc "Implementation guides supported"}},
   :url
   {:confirms #{hl7-fhir-r4-core.uri/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Canonical identifier for this capability statement, represented as a URI (globally unique)"},
   :_copyright {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_title {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :software
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:name
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "A name the software is known by"},
     :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :version
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "Version covered by this statement"},
     :_version {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :releaseDate
     {:confirms #{hl7-fhir-r4-core.dateTime/schema},
      :fhir/flags #{:SU},
      :zen/desc "Date this version was released"},
     :_releaseDate {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :require #{:name},
    :fhir/flags #{:SU},
    :zen/desc "Software that is covered by this capability statement"},
   :version
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Business version of the capability statement"},
   :_version {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :contact
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.ContactDetail/schema},
     :fhir/flags #{:SU},
     :zen/desc "Contact details for the publisher"}},
   :implementation
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:description
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "Describes this specific instance"},
     :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :url
     {:confirms #{hl7-fhir-r4-core.url/schema},
      :fhir/flags #{:SU},
      :zen/desc "Base URL for the installation"},
     :_url {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :custodian
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :fhir/flags #{:SU},
      :zen.fhir/reference
      {:refers #{hl7-fhir-r4-core.Organization/schema}},
      :zen/desc "Organization that manages the data"}},
    :require #{:description},
    :fhir/flags #{:SU},
    :zen/desc "If this describes a specific instance"},
   :rest
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:_documentation {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :searchParam
      {:type zen/vector,
       :every
       {:zen/desc "Search parameters for searching all resources"}},
      :security
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:cors
        {:confirms #{hl7-fhir-r4-core.boolean/schema},
         :fhir/flags #{:SU},
         :zen/desc "Adds CORS Headers (http://enable-cors.org/)"},
        :_cors {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :service
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
          :fhir/flags #{:SU},
          :zen/desc
          "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates"}},
        :description
        {:confirms #{hl7-fhir-r4-core.markdown/schema},
         :zen/desc "General description of how security works"},
        :_description {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :fhir/flags #{:SU},
       :zen/desc "Information about security of implementation"},
      :operation
      {:type zen/vector,
       :every
       {:fhir/flags #{:SU},
        :zen/desc "Definition of a system level operation"}},
      :mode
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.restful-capability-mode/value-set,
        :strength :required},
       :zen/desc "client | server"},
      :_compartment
      {:type zen/vector,
       :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
      :interaction
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:code
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :zen.fhir/value-set
          {:symbol
           hl7-fhir-r4-core.value-set.system-restful-interaction/value-set,
           :strength :required},
          :zen/desc
          "transaction | batch | search-system | history-system"},
         :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :documentation
         {:confirms #{hl7-fhir-r4-core.markdown/schema},
          :zen/desc "Anything special about operation behavior"},
         :_documentation
         {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :require #{:code},
        :zen/desc "What operations are supported?"}},
      :documentation
      {:confirms #{hl7-fhir-r4-core.markdown/schema},
       :zen/desc "General description of implementation"},
      :resource
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:_readHistory {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :_searchRevInclude
         {:type zen/vector,
          :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
         :searchRevInclude
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.string/schema},
           :zen/desc "_revinclude values supported by the server"}},
         :_documentation
         {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :searchParam
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:name
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :zen/desc "Name of search parameter"},
            :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :definition
            {:confirms #{hl7-fhir-r4-core.canonical/schema},
             :zen/desc "Source of definition for parameter"},
            :_definition
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :type
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :zen.fhir/value-set
             {:symbol
              hl7-fhir-r4-core.value-set.search-param-type/value-set,
              :strength :required},
             :zen/desc
             "number | date | string | token | reference | composite | quantity | uri | special"},
            :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :documentation
            {:confirms #{hl7-fhir-r4-core.markdown/schema},
             :zen/desc "Server-specific usage"},
            :_documentation
            {:confirms #{hl7-fhir-r4-core.Element/schema}}},
           :require #{:name :type},
           :zen/desc "Search parameters supported by implementation"}},
         :conditionalUpdate
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :zen/desc "If allows/uses conditional update"},
         :_updateCreate {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :_conditionalCreate
         {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :conditionalRead
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :zen.fhir/value-set
          {:symbol
           hl7-fhir-r4-core.value-set.conditional-read-status/value-set,
           :strength :required},
          :zen/desc
          "not-supported | modified-since | not-match | full-support"},
         :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :operation
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:name
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc "Name by which the operation/query is invoked"},
            :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :definition
            {:confirms #{hl7-fhir-r4-core.canonical/schema},
             :fhir/flags #{:SU},
             :zen/desc "The defined operation/query"},
            :_definition
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :documentation
            {:confirms #{hl7-fhir-r4-core.markdown/schema},
             :zen/desc "Specific details about operation behavior"},
            :_documentation
            {:confirms #{hl7-fhir-r4-core.Element/schema}}},
           :require #{:definition :name},
           :fhir/flags #{:SU},
           :zen/desc "Definition of a resource operation"}},
         :_conditionalUpdate
         {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :referencePolicy
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.code/schema},
           :zen.fhir/value-set
           {:symbol
            hl7-fhir-r4-core.value-set.reference-handling-policy/value-set,
            :strength :required},
           :zen/desc
           "literal | logical | resolves | enforced | local"}},
         :readHistory
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :zen/desc "Whether vRead can return past versions"},
         :type
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :fhir/flags #{:SU},
          :zen.fhir/value-set
          {:symbol hl7-fhir-r4-core.value-set.resource-types/value-set,
           :strength :required},
          :zen/desc "A resource type that is supported"},
         :interaction
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:code
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :zen.fhir/value-set
             {:symbol
              hl7-fhir-r4-core.value-set.type-restful-interaction/value-set,
              :strength :required},
             :zen/desc
             "read | vread | update | patch | delete | history-instance | history-type | create | search-type"},
            :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :documentation
            {:confirms #{hl7-fhir-r4-core.markdown/schema},
             :zen/desc "Anything special about operation behavior"},
            :_documentation
            {:confirms #{hl7-fhir-r4-core.Element/schema}}},
           :require #{:code},
           :zen/desc "What operations are supported?"}},
         :_conditionalRead
         {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :documentation
         {:confirms #{hl7-fhir-r4-core.markdown/schema},
          :zen/desc
          "Additional information about the use of the resource type"},
         :updateCreate
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :zen/desc "If update can commit to a new identity"},
         :_profile {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :_conditionalDelete
         {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :conditionalCreate
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :zen/desc "If allows/uses conditional create"},
         :supportedProfile
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.canonical/schema},
           :fhir/flags #{:SU},
           :zen/desc "Profiles for use cases supported"}},
         :_referencePolicy
         {:type zen/vector,
          :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
         :_searchInclude
         {:type zen/vector,
          :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
         :searchInclude
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.string/schema},
           :zen/desc "_include values supported by the server"}},
         :versioning
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :zen.fhir/value-set
          {:symbol
           hl7-fhir-r4-core.value-set.versioning-policy/value-set,
           :strength :required},
          :zen/desc "no-version | versioned | versioned-update"},
         :profile
         {:confirms #{hl7-fhir-r4-core.canonical/schema},
          :fhir/flags #{:SU},
          :zen/desc "Base System profile for all uses of resource"},
         :_versioning {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :_supportedProfile
         {:type zen/vector,
          :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
         :conditionalDelete
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :zen.fhir/value-set
          {:symbol
           hl7-fhir-r4-core.value-set.conditional-delete-status/value-set,
           :strength :required},
          :zen/desc
          "not-supported | single | multiple - how conditional delete is supported"}},
        :require #{:type},
        :fhir/flags #{:SU},
        :zen/desc "Resource served on the REST interface"}},
      :compartment
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.canonical/schema},
        :zen/desc "Compartments served/used by system"}},
      :_mode {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:mode},
     :fhir/flags #{:SU},
     :zen/desc "If the endpoint is a RESTful one"}},
   :_url {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_implementationGuide
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}}},
  :zen.fhir/type "CapabilityStatement"}}