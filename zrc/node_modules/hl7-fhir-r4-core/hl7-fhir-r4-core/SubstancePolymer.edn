{ns hl7-fhir-r4-core.SubstancePolymer,
 import
 #{hl7-fhir-r4-core.integer
   hl7-fhir-r4-core.BackboneElement
   zen.fhir
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Attachment
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.SubstanceAmount
   hl7-fhir-r4-core.CodeableConcept},
 schema
 {:zen/tags #{zen/schema zen.fhir/base-schema},
  :zen/desc "Todo.",
  :zen.fhir/type "SubstancePolymer",
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/SubstancePolymer",
  :zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :type zen/map,
  :keys
  {:class
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc "Todo"},
   :geometry
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc "Todo"},
   :copolymerConnectivity
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc "Todo"}},
   :modification
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.string/schema},
     :fhir/flags #{:SU},
     :zen/desc "Todo"}},
   :_modification
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :monomerSet
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:ratioType
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen/desc "Todo"},
      :startingMaterial
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:material
         {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"},
         :type
         {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"},
         :isDefining
         {:confirms #{hl7-fhir-r4-core.boolean/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"},
         :_isDefining {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :amount
         {:confirms #{hl7-fhir-r4-core.SubstanceAmount/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"}},
        :fhir/flags #{:SU},
        :zen/desc "Todo"}}},
     :fhir/flags #{:SU},
     :zen/desc "Todo"}},
   :repeat
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:numberOfUnits
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :fhir/flags #{:SU},
       :zen/desc "Todo"},
      :_numberOfUnits {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :averageMolecularFormula
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Todo"},
      :_averageMolecularFormula
      {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :repeatUnitAmountType
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen/desc "Todo"},
      :repeatUnit
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:orientationOfPolymerisation
         {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"},
         :repeatUnit
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"},
         :_repeatUnit {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :amount
         {:confirms #{hl7-fhir-r4-core.SubstanceAmount/schema},
          :fhir/flags #{:SU},
          :zen/desc "Todo"},
         :degreeOfPolymerisation
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:degree
            {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
             :fhir/flags #{:SU},
             :zen/desc "Todo"},
            :amount
            {:confirms #{hl7-fhir-r4-core.SubstanceAmount/schema},
             :fhir/flags #{:SU},
             :zen/desc "Todo"}},
           :fhir/flags #{:SU},
           :zen/desc "Todo"}},
         :structuralRepresentation
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:type
            {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
             :fhir/flags #{:SU},
             :zen/desc "Todo"},
            :representation
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :fhir/flags #{:SU},
             :zen/desc "Todo"},
            :_representation
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :attachment
            {:confirms #{hl7-fhir-r4-core.Attachment/schema},
             :fhir/flags #{:SU},
             :zen/desc "Todo"}},
           :fhir/flags #{:SU},
           :zen/desc "Todo"}}},
        :fhir/flags #{:SU},
        :zen/desc "Todo"}}},
     :fhir/flags #{:SU},
     :zen/desc "Todo"}}}}}