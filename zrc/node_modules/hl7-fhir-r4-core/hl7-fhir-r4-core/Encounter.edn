{ns hl7-fhir-r4-core.Encounter,
 import
 #{hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.Observation
   hl7-fhir-r4-core.Duration
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.Condition
   hl7-fhir-r4-core.code
   hl7-fhir-r4-core.ImmunizationRecommendation
   zen.fhir
   hl7-fhir-r4-core.Group
   hl7-fhir-r4-core.RelatedPerson
   hl7-fhir-r4-core.value-set.encounter-reason
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.EpisodeOfCare
   hl7-fhir-r4-core.Coding
   hl7-fhir-r4-core.value-set.diagnosis-role
   hl7-fhir-r4-core.Appointment
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.value-set.encounter-location-status
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.positiveInt
   hl7-fhir-r4-core.ServiceRequest
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.Account
   hl7-fhir-r4-core.Procedure
   hl7-fhir-r4-core.Encounter
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.value-set.encounter-status
   hl7-fhir-r4-core.value-set.encounter-special-courtesy
   hl7-fhir-r4-core.Location
   hl7-fhir-r4-core.value-set.encounter-special-arrangements
   hl7-fhir-r4-core.Organization
   hl7-fhir-r4-core.value-set.encounter-admit-source},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/Encounter",
  :require #{:status :class},
  :type zen/map,
  :zen/desc
  "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
  :keys
  {:appointment
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.Appointment/schema}},
     :zen/desc "The appointment that scheduled this encounter"}},
   :diagnosis
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:condition
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:SU},
       :zen.fhir/reference
       {:refers
        #{hl7-fhir-r4-core.Procedure/schema
          hl7-fhir-r4-core.Condition/schema}},
       :zen/desc
       "The diagnosis or procedure relevant to the encounter"},
      :use
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.diagnosis-role/value-set,
        :strength :preferred},
       :zen/desc
       "Role that this diagnosis has within the encounter (e.g. admission, billing, discharge â€¦)"},
      :rank
      {:confirms #{hl7-fhir-r4-core.positiveInt/schema},
       :zen/desc "Ranking of the diagnosis (for each role type)"},
      :_rank {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:condition},
     :fhir/flags #{:SU},
     :zen/desc "The list of diagnosis relevant to this encounter"}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :serviceProvider
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :zen.fhir/reference
    {:refers #{hl7-fhir-r4-core.Organization/schema}},
    :zen/desc
    "The organization (facility) responsible for this encounter"},
   :episodeOfCare
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.EpisodeOfCare/schema}},
     :zen/desc
     "Episode(s) of care that this encounter should be recorded against"}},
   :reasonCode
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen.fhir/value-set
     {:symbol hl7-fhir-r4-core.value-set.encounter-reason/value-set,
      :strength :preferred},
     :zen/desc "Coded reason the encounter takes place"}},
   :type
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc "Specific type of encounter"}},
   :participant
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:type
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :fhir/flags #{:SU},
        :zen/desc "Role of participant in encounter"}},
      :period
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc
       "Period of time during the encounter that the participant participated"},
      :individual
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:SU},
       :zen.fhir/reference
       {:refers
        #{hl7-fhir-r4-core.PractitionerRole/schema
          hl7-fhir-r4-core.Practitioner/schema
          hl7-fhir-r4-core.RelatedPerson/schema}},
       :zen/desc
       "Persons involved in the encounter other than the patient"}},
     :fhir/flags #{:SU},
     :zen/desc "List of participants involved in the encounter"}},
   :serviceType
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc "Specific type of service"},
   :account
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Account/schema}},
     :zen/desc
     "The set of accounts that may be used for billing for this Encounter"}},
   :classHistory
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:class
      {:confirms #{hl7-fhir-r4-core.Coding/schema},
       :zen/desc "inpatient | outpatient | ambulatory | emergency +"},
      :period
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc
       "The time that the episode was in the specified class"}},
     :require #{:class :period},
     :zen/desc "List of past encounter classes"}},
   :priority
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :zen/desc "Indicates the urgency of the encounter"},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.encounter-status/value-set,
     :strength :required},
    :zen/desc
    "planned | arrived | triaged | in-progress | onleave | finished | cancelled +"},
   :class
   {:confirms #{hl7-fhir-r4-core.Coding/schema},
    :fhir/flags #{:SU},
    :zen/desc "Classification of patient encounter"},
   :length
   {:confirms #{hl7-fhir-r4-core.Duration/schema},
    :zen/desc
    "Quantity of time the encounter lasted (less time absent)"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "Identifier(s) by which this encounter is known"}},
   :hospitalization
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:dischargeDisposition
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :zen/desc "Category or kind of location after discharge"},
     :preAdmissionIdentifier
     {:confirms #{hl7-fhir-r4-core.Identifier/schema},
      :zen/desc "Pre-admission identifier"},
     :specialArrangement
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.encounter-special-arrangements/value-set,
        :strength :preferred},
       :zen/desc "Wheelchair, translator, stretcher, etc."}},
     :dietPreference
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc "Diet preferences reported by the patient"}},
     :admitSource
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :zen.fhir/value-set
      {:symbol
       hl7-fhir-r4-core.value-set.encounter-admit-source/value-set,
       :strength :preferred},
      :zen/desc
      "From where patient was admitted (physician referral, transfer)"},
     :specialCourtesy
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.encounter-special-courtesy/value-set,
        :strength :preferred},
       :zen/desc "Special courtesies (VIP, board member)"}},
     :reAdmission
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :zen/desc
      "The type of hospital re-admission that has occurred (if any). If the value is absent, then this is not identified as a readmission"},
     :origin
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.Organization/schema
         hl7-fhir-r4-core.Location/schema}},
      :zen/desc
      "The location/organization from which the patient came before admission"},
     :destination
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.Organization/schema
         hl7-fhir-r4-core.Location/schema}},
      :zen/desc
      "Location/organization to which the patient is discharged"}},
    :zen/desc "Details about the admission to a healthcare service"},
   :period
   {:confirms #{hl7-fhir-r4-core.Period/schema},
    :zen/desc "The start and end time of the encounter"},
   :basedOn
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.ServiceRequest/schema}},
     :zen/desc "The ServiceRequest that initiated this encounter"}},
   :partOf
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Encounter/schema}},
    :zen/desc "Another Encounter this encounter is part of"},
   :location
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:location
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :zen.fhir/reference
       {:refers #{hl7-fhir-r4-core.Location/schema}},
       :zen/desc "Location the encounter takes place"},
      :status
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.encounter-location-status/value-set,
        :strength :required},
       :zen/desc "planned | active | reserved | completed"},
      :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :physicalType
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc
       "The physical type of the location (usually the level in the location hierachy - bed room ward etc.)"},
      :period
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc
       "Time period during which the patient was present at the location"}},
     :require #{:location},
     :zen/desc "List of locations where the patient has been"}},
   :subject
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.Patient/schema hl7-fhir-r4-core.Group/schema}},
    :zen/desc "The patient or group present at the encounter"},
   :statusHistory
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:status
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.encounter-status/value-set,
        :strength :required},
       :zen/desc
       "planned | arrived | triaged | in-progress | onleave | finished | cancelled +"},
      :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :period
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc
       "The time that the episode was in the specified status"}},
     :require #{:status :period},
     :zen/desc "List of past encounter statuses"}},
   :reasonReference
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers
      #{hl7-fhir-r4-core.Observation/schema
        hl7-fhir-r4-core.Procedure/schema
        hl7-fhir-r4-core.ImmunizationRecommendation/schema
        hl7-fhir-r4-core.Condition/schema}},
     :zen/desc "Reason the encounter takes place (reference)"}}},
  :zen.fhir/type "Encounter"}}