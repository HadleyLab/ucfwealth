{ns hl7-fhir-r4-core.MedicationRequest,
 import
 #{hl7-fhir-r4-core.CareTeam
   hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.Device
   hl7-fhir-r4-core.Observation
   hl7-fhir-r4-core.Duration
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.SimpleQuantity
   hl7-fhir-r4-core.Condition
   hl7-fhir-r4-core.canonical
   hl7-fhir-r4-core.CarePlan
   hl7-fhir-r4-core.code
   hl7-fhir-r4-core.DetectedIssue
   hl7-fhir-r4-core.ImmunizationRecommendation
   zen.fhir
   hl7-fhir-r4-core.Annotation
   hl7-fhir-r4-core.Group
   hl7-fhir-r4-core.RelatedPerson
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.ClaimResponse
   hl7-fhir-r4-core.value-set.request-priority
   hl7-fhir-r4-core.MedicationRequest
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.Dosage
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.unsignedInt
   hl7-fhir-r4-core.Coverage
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.ServiceRequest
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.Provenance
   hl7-fhir-r4-core.Encounter
   hl7-fhir-r4-core.value-set.medicationrequest-intent
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.Medication
   hl7-fhir-r4-core.Organization
   hl7-fhir-r4-core.value-set.medicationrequest-status},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/MedicationRequest",
  :require #{:status :intent :subject :medication},
  :type zen/map,
  :zen/desc
  "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
  :keys
  {:performerType
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Desired kind of performer of the medication administration"},
   :category
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :zen/desc "Type of medication usage"}},
   :insurance
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers
      #{hl7-fhir-r4-core.ClaimResponse/schema
        hl7-fhir-r4-core.Coverage/schema}},
     :zen/desc "Associated insurance coverage"}},
   :instantiatesCanonical
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.canonical/schema},
     :fhir/flags #{:SU},
     :zen/desc "Instantiates FHIR protocol or definition"}},
   :eventHistory
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.Provenance/schema}},
     :zen/desc "A list of events of interest in the lifecycle"}},
   :instantiatesUri
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.uri/schema},
     :fhir/flags #{:SU},
     :zen/desc "Instantiates external protocol or definition"}},
   :substitution
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:allowed
     {:fhir/polymorphic true,
      :exclusive-keys #{#{:CodeableConcept :boolean}},
      :type zen/map,
      :keys
      {:boolean {:confirms #{hl7-fhir-r4-core.boolean/schema}},
       :_boolean {:confirms #{hl7-fhir-r4-core.Element/schema}},
       :CodeableConcept
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}}},
      :zen/desc "Whether substitution is allowed or not"},
     :reason
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :zen/desc "Why should (not) substitution be made"}},
    :require #{:allowed},
    :zen/desc "Any restrictions on medication substitution"},
   :_authoredOn {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :detectedIssue
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.DetectedIssue/schema}},
     :zen/desc "Clinical Issue with action"}},
   :encounter
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Encounter/schema}},
    :zen/desc "Encounter created as part of encounter/admission/stay"},
   :_doNotPerform {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :dispenseRequest
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:initialFill
     {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
      :type zen/map,
      :keys
      {:quantity
       {:confirms
        #{hl7-fhir-r4-core.Quantity/schema
          hl7-fhir-r4-core.SimpleQuantity/schema},
        :zen/desc "First fill quantity"},
       :duration
       {:confirms #{hl7-fhir-r4-core.Duration/schema},
        :zen/desc "First fill duration"}},
      :zen/desc "First fill details"},
     :dispenseInterval
     {:confirms #{hl7-fhir-r4-core.Duration/schema},
      :zen/desc "Minimum period of time between dispenses"},
     :validityPeriod
     {:confirms #{hl7-fhir-r4-core.Period/schema},
      :zen/desc "Time period supply is authorized for"},
     :numberOfRepeatsAllowed
     {:confirms #{hl7-fhir-r4-core.unsignedInt/schema},
      :zen/desc "Number of refills authorized"},
     :_numberOfRepeatsAllowed
     {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :quantity
     {:confirms
      #{hl7-fhir-r4-core.Quantity/schema
        hl7-fhir-r4-core.SimpleQuantity/schema},
      :zen/desc "Amount of medication to supply per dispense"},
     :expectedSupplyDuration
     {:confirms #{hl7-fhir-r4-core.Duration/schema},
      :zen/desc "Number of days supply per dispense"},
     :performer
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers #{hl7-fhir-r4-core.Organization/schema}},
      :zen/desc "Intended dispenser"}},
    :zen/desc "Medication supply authorization"},
   :_priority {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :reported
   {:fhir/polymorphic true,
    :exclusive-keys #{#{:boolean :Reference}},
    :type zen/map,
    :keys
    {:boolean {:confirms #{hl7-fhir-r4-core.boolean/schema}},
     :_boolean {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :Reference
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.Patient/schema
         hl7-fhir-r4-core.PractitionerRole/schema
         hl7-fhir-r4-core.Organization/schema
         hl7-fhir-r4-core.Practitioner/schema
         hl7-fhir-r4-core.RelatedPerson/schema}}}},
    :fhir/flags #{:SU},
    :zen/desc "Reported rather than primary record"},
   :reasonCode
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :zen/desc
     "Reason or indication for ordering or not ordering the medication"}},
   :statusReason
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :zen/desc "Reason for current status"},
   :authoredOn
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "When request was initially authored"},
   :note
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Annotation/schema},
     :zen/desc "Information about the prescription"}},
   :_intent {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :requester
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.Patient/schema
       hl7-fhir-r4-core.PractitionerRole/schema
       hl7-fhir-r4-core.Organization/schema
       hl7-fhir-r4-core.Device/schema
       hl7-fhir-r4-core.Practitioner/schema
       hl7-fhir-r4-core.RelatedPerson/schema}},
    :zen/desc "Who/What requested the Request"},
   :supportingInformation
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference {:refers #{}},
     :zen/desc "Information to support ordering of the medication"}},
   :priority
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.request-priority/value-set,
     :strength :required},
    :zen/desc "routine | urgent | asap | stat"},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.medicationrequest-status/value-set,
     :strength :required},
    :zen/desc
    "active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown"},
   :dosageInstruction
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Dosage/schema},
     :zen/desc "How the medication should be taken"}},
   :groupIdentifier
   {:confirms #{hl7-fhir-r4-core.Identifier/schema},
    :fhir/flags #{:SU},
    :zen/desc "Composite request this is part of"},
   :recorder
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.PractitionerRole/schema
       hl7-fhir-r4-core.Practitioner/schema}},
    :zen/desc "Person who entered the request"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :zen/desc "External ids for this request"}},
   :doNotPerform
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU :?!},
    :zen/desc "True if request is prohibiting action"},
   :intent
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol
     hl7-fhir-r4-core.value-set.medicationrequest-intent/value-set,
     :strength :required},
    :zen/desc
    "proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option"},
   :basedOn
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers
      #{hl7-fhir-r4-core.ServiceRequest/schema
        hl7-fhir-r4-core.CarePlan/schema
        hl7-fhir-r4-core.ImmunizationRecommendation/schema
        hl7-fhir-r4-core.MedicationRequest/schema}},
     :zen/desc "What request fulfills"}},
   :priorPrescription
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :zen.fhir/reference
    {:refers #{hl7-fhir-r4-core.MedicationRequest/schema}},
    :zen/desc "An order/prescription that is being replaced"},
   :courseOfTherapyType
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :zen/desc "Overall pattern of medication administration"},
   :_instantiatesCanonical
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :subject
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.Patient/schema hl7-fhir-r4-core.Group/schema}},
    :zen/desc "Who or group medication request is for"},
   :performer
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.CareTeam/schema
       hl7-fhir-r4-core.Patient/schema
       hl7-fhir-r4-core.PractitionerRole/schema
       hl7-fhir-r4-core.Organization/schema
       hl7-fhir-r4-core.Device/schema
       hl7-fhir-r4-core.Practitioner/schema
       hl7-fhir-r4-core.RelatedPerson/schema}},
    :zen/desc "Intended performer of administration"},
   :medication
   {:fhir/polymorphic true,
    :exclusive-keys #{#{:CodeableConcept :Reference}},
    :type zen/map,
    :keys
    {:CodeableConcept
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
     :Reference
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers #{hl7-fhir-r4-core.Medication/schema}}}},
    :fhir/flags #{:SU},
    :zen/desc "Medication to be taken"},
   :reasonReference
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers
      #{hl7-fhir-r4-core.Observation/schema
        hl7-fhir-r4-core.Condition/schema}},
     :zen/desc
     "Condition or observation that supports why the prescription is being written"}},
   :_instantiatesUri
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}}},
  :zen.fhir/type "MedicationRequest"}}