{ns hl7-fhir-r4-core.Substance,
 import
 #{hl7-fhir-r4-core.Substance
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.SimpleQuantity
   hl7-fhir-r4-core.Ratio
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.value-set.substance-status},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/Substance",
  :require #{:code},
  :type zen/map,
  :zen/desc "A homogeneous material with a definite composition.",
  :keys
  {:description
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Textual description of the substance, comments"},
   :category
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc "What class/type of substance this is"}},
   :instance
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:identifier
      {:confirms #{hl7-fhir-r4-core.Identifier/schema},
       :fhir/flags #{:SU},
       :zen/desc "Identifier of the package/container"},
      :expiry
      {:confirms #{hl7-fhir-r4-core.dateTime/schema},
       :fhir/flags #{:SU},
       :zen/desc "When no longer valid to use"},
      :_expiry {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :quantity
      {:confirms
       #{hl7-fhir-r4-core.Quantity/schema
         hl7-fhir-r4-core.SimpleQuantity/schema},
       :fhir/flags #{:SU},
       :zen/desc "Amount of substance in the package"}},
     :fhir/flags #{:SU},
     :zen/desc
     "If this describes a specific package/container of the substance"}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :ingredient
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:quantity
      {:confirms #{hl7-fhir-r4-core.Ratio/schema},
       :fhir/flags #{:SU},
       :zen/desc "Optional amount (concentration)"},
      :substance
      {:fhir/polymorphic true,
       :exclusive-keys #{#{:CodeableConcept :Reference}},
       :type zen/map,
       :keys
       {:CodeableConcept
        {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
        :Reference
        {:confirms
         #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
         :zen.fhir/reference
         {:refers #{hl7-fhir-r4-core.Substance/schema}}}},
       :fhir/flags #{:SU},
       :zen/desc "A component of the substance"}},
     :require #{:substance},
     :fhir/flags #{:SU},
     :zen/desc "Composition information about the substance"}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.substance-status/value-set,
     :strength :required},
    :zen/desc "active | inactive | entered-in-error"},
   :code
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc "What substance this is"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "Unique identifier"}}},
  :zen.fhir/type "Substance"}}