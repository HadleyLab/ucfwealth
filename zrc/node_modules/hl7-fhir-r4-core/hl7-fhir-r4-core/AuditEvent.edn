{ns hl7-fhir-r4-core.AuditEvent,
 import
 #{hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.Device
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.value-set.audit-event-outcome
   hl7-fhir-r4-core.RelatedPerson
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.instant
   hl7-fhir-r4-core.Coding
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.value-set.audit-event-action
   hl7-fhir-r4-core.base64Binary
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Location
   hl7-fhir-r4-core.Organization
   hl7-fhir-r4-core.value-set.network-type},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/AuditEvent",
  :require #{:type :source :recorded :agent},
  :type zen/map,
  :zen/desc
  "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
  :keys
  {:outcomeDesc
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Description of the event outcome"},
   :_action {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :type
   {:confirms #{hl7-fhir-r4-core.Coding/schema},
    :fhir/flags #{:SU},
    :zen/desc "Type/identifier of event"},
   :outcome
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.audit-event-outcome/value-set,
     :strength :required},
    :zen/desc "Whether the event succeeded or failed"},
   :source
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:site
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :zen/desc "Logical source location within the enterprise"},
     :_site {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :observer
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :fhir/flags #{:SU},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.Patient/schema
         hl7-fhir-r4-core.PractitionerRole/schema
         hl7-fhir-r4-core.Organization/schema
         hl7-fhir-r4-core.Device/schema
         hl7-fhir-r4-core.Practitioner/schema
         hl7-fhir-r4-core.RelatedPerson/schema}},
      :zen/desc "The identity of source detecting the event"},
     :type
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.Coding/schema},
       :zen/desc "The type of source where event originated"}}},
    :require #{:observer},
    :zen/desc "Audit Event Reporter"},
   :recorded
   {:confirms #{hl7-fhir-r4-core.instant/schema},
    :fhir/flags #{:SU},
    :zen/desc "Time when the event was recorded"},
   :agent
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:role
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :zen/desc "Agent role in the event"}},
      :requestor
      {:confirms #{hl7-fhir-r4-core.boolean/schema},
       :fhir/flags #{:SU},
       :zen/desc "Whether user is initiator"},
      :who
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:SU},
       :zen.fhir/reference
       {:refers
        #{hl7-fhir-r4-core.Patient/schema
          hl7-fhir-r4-core.PractitionerRole/schema
          hl7-fhir-r4-core.Organization/schema
          hl7-fhir-r4-core.Device/schema
          hl7-fhir-r4-core.Practitioner/schema
          hl7-fhir-r4-core.RelatedPerson/schema}},
       :zen/desc "Identifier of who"},
      :altId
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Alternative User identity"},
      :name
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Human friendly name for the agent"},
      :type
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc "How agent participated"},
      :_altId {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :policy
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.uri/schema},
        :zen/desc "Policy that authorized event"}},
      :purposeOfUse
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
        :zen/desc "Reason given for this user"}},
      :_policy
      {:type zen/vector,
       :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
      :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :network
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:address
        {:confirms #{hl7-fhir-r4-core.string/schema},
         :zen/desc
         "Identifier for the network access point of the user device"},
        :_address {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :type
        {:confirms #{hl7-fhir-r4-core.code/schema},
         :zen.fhir/value-set
         {:symbol hl7-fhir-r4-core.value-set.network-type/value-set,
          :strength :required},
         :zen/desc "The type of network access point"},
        :_type {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :zen/desc "Logical network location for application activity"},
      :location
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :zen.fhir/reference
       {:refers #{hl7-fhir-r4-core.Location/schema}},
       :zen/desc "Where"},
      :media
      {:confirms #{hl7-fhir-r4-core.Coding/schema},
       :zen/desc "Type of media"},
      :_requestor {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:requestor},
     :zen/desc "Actor involved in the event"},
    :minItems 1},
   :_outcome {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :purposeOfEvent
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc "The purposeOfUse of the event"}},
   :action
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.audit-event-action/value-set,
     :strength :required},
    :zen/desc "Type of action performed during the event"},
   :_outcomeDesc {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :period
   {:confirms #{hl7-fhir-r4-core.Period/schema},
    :zen/desc "When the activity occurred"},
   :_recorded {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :entity
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:role
      {:confirms #{hl7-fhir-r4-core.Coding/schema},
       :zen/desc "What role the entity played"},
      :description
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Descriptive text"},
      :_query {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :name
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Descriptor for entity"},
      :type
      {:confirms #{hl7-fhir-r4-core.Coding/schema},
       :zen/desc "Type of entity involved"},
      :lifecycle
      {:confirms #{hl7-fhir-r4-core.Coding/schema},
       :zen/desc "Life-cycle stage for the entity"},
      :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :query
      {:confirms #{hl7-fhir-r4-core.base64Binary/schema},
       :fhir/flags #{:SU},
       :zen/desc "Query parameters"},
      :securityLabel
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.Coding/schema},
        :zen/desc "Security labels on the entity"}},
      :what
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:SU},
       :zen.fhir/reference {:refers #{}},
       :zen/desc "Specific instance of resource"},
      :detail
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:type
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :zen/desc "Name of the property"},
         :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :value
         {:fhir/polymorphic true,
          :exclusive-keys #{#{:base64Binary :string}},
          :type zen/map,
          :keys
          {:string {:confirms #{hl7-fhir-r4-core.string/schema}},
           :_string {:confirms #{hl7-fhir-r4-core.Element/schema}},
           :base64Binary
           {:confirms #{hl7-fhir-r4-core.base64Binary/schema}},
           :_base64Binary
           {:confirms #{hl7-fhir-r4-core.Element/schema}}},
          :zen/desc "Property value"}},
        :require #{:value :type},
        :zen/desc "Additional Information about the entity"}}},
     :zen/desc "Data or objects used"}},
   :subtype
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Coding/schema},
     :fhir/flags #{:SU},
     :zen/desc "More specific type/id for the event"}}},
  :zen.fhir/type "AuditEvent"}}