{ns hl7-fhir-r4-core.Group,
 import
 #{hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.Device
   hl7-fhir-r4-core.Substance
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.value-set.group-type
   hl7-fhir-r4-core.Group
   hl7-fhir-r4-core.RelatedPerson
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.Range
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.unsignedInt
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.Medication
   hl7-fhir-r4-core.Organization},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/Group",
  :require #{:type :actual},
  :type zen/map,
  :zen/desc
  "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.",
  :keys
  {:_active {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_quantity {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :name
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Label for Group"},
   :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :type
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.group-type/value-set,
     :strength :required},
    :zen/desc
    "person | animal | practitioner | device | medication | substance"},
   :member
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:entity
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :zen.fhir/reference
       {:refers
        #{hl7-fhir-r4-core.Patient/schema
          hl7-fhir-r4-core.PractitionerRole/schema
          hl7-fhir-r4-core.Medication/schema
          hl7-fhir-r4-core.Device/schema
          hl7-fhir-r4-core.Substance/schema
          hl7-fhir-r4-core.Practitioner/schema
          hl7-fhir-r4-core.Group/schema}},
       :zen/desc "Reference to the group member"},
      :period
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc "Period member belonged to the group"},
      :inactive
      {:confirms #{hl7-fhir-r4-core.boolean/schema},
       :zen/desc "If member is no longer in group"},
      :_inactive {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:entity},
     :zen/desc "Who or what is in group"}},
   :characteristic
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:code
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc "Kind of characteristic"},
      :value
      {:fhir/polymorphic true,
       :exclusive-keys
       #{#{:Range :CodeableConcept :Quantity :boolean :Reference}},
       :type zen/map,
       :keys
       {:CodeableConcept
        {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
        :boolean {:confirms #{hl7-fhir-r4-core.boolean/schema}},
        :_boolean {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :Quantity {:confirms #{hl7-fhir-r4-core.Quantity/schema}},
        :Range {:confirms #{hl7-fhir-r4-core.Range/schema}},
        :Reference
        {:confirms
         #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
         :zen.fhir/reference {:refers #{}}}},
       :zen/desc "Value held by characteristic"},
      :exclude
      {:confirms #{hl7-fhir-r4-core.boolean/schema},
       :zen/desc "Group includes or excludes"},
      :_exclude {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :period
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc "Period over which characteristic is tested"}},
     :require #{:exclude :value :code},
     :zen/desc "Include / Exclude group members by Trait"}},
   :active
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Whether this group's record is in active use"},
   :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :code
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc "Kind of Group members"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "Unique id"}},
   :_actual {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :quantity
   {:confirms #{hl7-fhir-r4-core.unsignedInt/schema},
    :fhir/flags #{:SU},
    :zen/desc "Number of members"},
   :managingEntity
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.PractitionerRole/schema
       hl7-fhir-r4-core.Organization/schema
       hl7-fhir-r4-core.Practitioner/schema
       hl7-fhir-r4-core.RelatedPerson/schema}},
    :zen/desc
    "Entity that is the custodian of the Group's definition"},
   :actual
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "Descriptive or actual"}},
  :zen.fhir/type "Group"}}