{ns hl7-fhir-r4-core.MolecularSequence,
 import
 #{hl7-fhir-r4-core.integer
   hl7-fhir-r4-core.MolecularSequence
   hl7-fhir-r4-core.Device
   hl7-fhir-r4-core.Observation
   hl7-fhir-r4-core.decimal
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.Specimen
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.value-set.sequence-type
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.value-set.repository-type
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.value-set.quality-type
   hl7-fhir-r4-core.value-set.strand-type
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.value-set.orientation-type
   hl7-fhir-r4-core.Organization},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/MolecularSequence",
  :require #{:coordinateSystem},
  :type zen/map,
  :zen/desc "Raw data describing a biological sequence.",
  :keys
  {:patient
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Patient/schema}},
    :zen/desc "Who and/or what this is about"},
   :structureVariant
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:variantType
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen/desc "Structural variant change type"},
      :exact
      {:confirms #{hl7-fhir-r4-core.boolean/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "Does the structural variant have base pair resolution breakpoints?"},
      :_exact {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :length
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :fhir/flags #{:SU},
       :zen/desc "Structural variant length"},
      :_length {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :outer
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:start
        {:confirms #{hl7-fhir-r4-core.integer/schema},
         :fhir/flags #{:SU},
         :zen/desc "Structural variant outer start"},
        :_start {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :end
        {:confirms #{hl7-fhir-r4-core.integer/schema},
         :fhir/flags #{:SU},
         :zen/desc "Structural variant outer end"},
        :_end {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :fhir/flags #{:SU},
       :zen/desc "Structural variant outer"},
      :inner
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:start
        {:confirms #{hl7-fhir-r4-core.integer/schema},
         :fhir/flags #{:SU},
         :zen/desc "Structural variant inner start"},
        :_start {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :end
        {:confirms #{hl7-fhir-r4-core.integer/schema},
         :fhir/flags #{:SU},
         :zen/desc "Structural variant inner end"},
        :_end {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :fhir/flags #{:SU},
       :zen/desc "Structural variant inner"}},
     :fhir/flags #{:SU},
     :zen/desc "Structural variant"}},
   :repository
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:readsetId
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Id of the read"},
      :name
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Repository's name"},
      :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :type
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.repository-type/value-set,
        :strength :required},
       :zen/desc "directlink | openapi | login | oauth | other"},
      :_datasetId {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :datasetId
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "Id of the dataset that used to call for dataset in repository"},
      :_variantsetId {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :variantsetId
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "Id of the variantset that used to call for variantset in repository"},
      :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :url
      {:confirms #{hl7-fhir-r4-core.uri/schema},
       :fhir/flags #{:SU},
       :zen/desc "URI of the repository"},
      :_readsetId {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_url {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:type},
     :fhir/flags #{:SU},
     :zen/desc
     "External repository which contains detailed report related with observedSeq in this resource"}},
   :variant
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:variantPointer
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:SU},
       :zen.fhir/reference
       {:refers #{hl7-fhir-r4-core.Observation/schema}},
       :zen/desc "Pointer to observed variant information"},
      :referenceAllele
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Allele in the reference sequence"},
      :_end {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :start
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "Start position of the variant on the  reference sequence"},
      :_observedAllele {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_referenceAllele {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :observedAllele
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc "Allele that was observed"},
      :_cigar {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :end
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "End position of the variant on the reference sequence"},
      :_start {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :cigar
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "Extended CIGAR string for aligning the sequence with reference bases"}},
     :fhir/flags #{:SU},
     :zen/desc "Variant in sequence"}},
   :specimen
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Specimen/schema}},
    :zen/desc "Specimen used for sequencing"},
   :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :type
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.sequence-type/value-set,
     :strength :required},
    :zen/desc "aa | dna | rna"},
   :_coordinateSystem {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_observedSeq {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_readCoverage {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :pointer
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:SU},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.MolecularSequence/schema}},
     :zen/desc "Pointer to next atomic sequence"}},
   :observedSeq
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Sequence that was observed"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Unique ID for this particular sequence. This is a FHIR-defined id"}},
   :quality
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:truthTP
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "True positives from the perspective of the truth data"},
      :fScore
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc "F-score"},
      :_fScore {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :truthFN
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc "False negatives"},
      :queryFP
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc "False positives"},
      :method
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen/desc "Method to get quality"},
      :_end {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :precision
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc "Precision of comparison"},
      :_type {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :start
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :fhir/flags #{:SU},
       :zen/desc "Start position of the sequence"},
      :queryTP
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "True positives from the perspective of the query data"},
      :type
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.quality-type/value-set,
        :strength :required},
       :zen/desc "indel | snp | unknown"},
      :_truthFN {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_gtFP {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :recall
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc "Recall of comparison"},
      :_truthTP {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_recall {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :roc
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:_numFN
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :_numTP
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :sensitivity
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.decimal/schema},
          :fhir/flags #{:SU},
          :zen/desc "Sensitivity of the GQ score"}},
        :precision
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.decimal/schema},
          :fhir/flags #{:SU},
          :zen/desc "Precision of the GQ score"}},
        :_fMeasure
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :_score
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :numFN
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.integer/schema},
          :fhir/flags #{:SU},
          :zen/desc "Roc score false negative numbers"}},
        :_sensitivity
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :numFP
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.integer/schema},
          :fhir/flags #{:SU},
          :zen/desc "Roc score false positive numbers"}},
        :score
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.integer/schema},
          :fhir/flags #{:SU},
          :zen/desc "Genotype quality score"}},
        :_precision
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :_numFP
        {:type zen/vector,
         :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
        :fMeasure
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.decimal/schema},
          :fhir/flags #{:SU},
          :zen/desc "FScore of the GQ score"}},
        :numTP
        {:type zen/vector,
         :every
         {:confirms #{hl7-fhir-r4-core.integer/schema},
          :fhir/flags #{:SU},
          :zen/desc "Roc score true positive numbers"}}},
       :fhir/flags #{:SU},
       :zen/desc "Receiver Operator Characteristic (ROC) Curve"},
      :score
      {:confirms #{hl7-fhir-r4-core.Quantity/schema},
       :fhir/flags #{:SU},
       :zen/desc "Quality score for the comparison"},
      :_precision {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_queryTP {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :end
      {:confirms #{hl7-fhir-r4-core.integer/schema},
       :fhir/flags #{:SU},
       :zen/desc "End position of the sequence"},
      :_queryFP {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :_start {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :standardSequence
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:SU},
       :zen/desc "Standard sequence for comparison"},
      :gtFP
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :fhir/flags #{:SU},
       :zen/desc
       "False positives where the non-REF alleles in the Truth and Query Call Sets match"}},
     :require #{:type},
     :fhir/flags #{:SU},
     :zen/desc "An set of value as quality of sequence"}},
   :device
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Device/schema}},
    :zen/desc "The method for sequencing"},
   :quantity
   {:confirms #{hl7-fhir-r4-core.Quantity/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "The number of copies of the sequence of interest.  (RNASeq)"},
   :coordinateSystem
   {:confirms #{hl7-fhir-r4-core.integer/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Base number of coordinate system (0 for 0-based numbering or coordinates, inclusive start, exclusive end, 1 for 1-based numbering, inclusive start, inclusive end)"},
   :referenceSeq
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:chromosome
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :fhir/flags #{:SU},
      :zen/desc "Chromosome containing genetic finding"},
     :referenceSeqId
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :fhir/flags #{:SU},
      :zen/desc "Reference identifier"},
     :_referenceSeqString
     {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :windowEnd
     {:confirms #{hl7-fhir-r4-core.integer/schema},
      :fhir/flags #{:SU},
      :zen/desc
      "End position of the window on the reference sequence"},
     :_genomeBuild {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :strand
     {:confirms #{hl7-fhir-r4-core.code/schema},
      :fhir/flags #{:SU},
      :zen.fhir/value-set
      {:symbol hl7-fhir-r4-core.value-set.strand-type/value-set,
       :strength :required},
      :zen/desc "watson | crick"},
     :genomeBuild
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc
      "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'"},
     :orientation
     {:confirms #{hl7-fhir-r4-core.code/schema},
      :fhir/flags #{:SU},
      :zen.fhir/value-set
      {:symbol hl7-fhir-r4-core.value-set.orientation-type/value-set,
       :strength :required},
      :zen/desc "sense | antisense"},
     :_strand {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :referenceSeqPointer
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :fhir/flags #{:SU},
      :zen.fhir/reference
      {:refers #{hl7-fhir-r4-core.MolecularSequence/schema}},
      :zen/desc
      "A pointer to another MolecularSequence entity as reference sequence"},
     :_windowStart {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_orientation {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :referenceSeqString
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :fhir/flags #{:SU},
      :zen/desc "A string to represent reference sequence"},
     :_windowEnd {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :windowStart
     {:confirms #{hl7-fhir-r4-core.integer/schema},
      :fhir/flags #{:SU},
      :zen/desc
      "Start position of the window on the  reference sequence"}},
    :fhir/flags #{:SU},
    :zen/desc "A sequence used as reference"},
   :performer
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers #{hl7-fhir-r4-core.Organization/schema}},
    :zen/desc "Who should be responsible for test result"},
   :readCoverage
   {:confirms #{hl7-fhir-r4-core.integer/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Average number of reads representing a given nucleotide in the reconstructed sequence"}},
  :zen.fhir/type "MolecularSequence"}}