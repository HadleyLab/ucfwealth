{ns hl7-fhir-r4-core.ConceptMap,
 import
 #{hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.canonical
   hl7-fhir-r4-core.markdown
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.value-set.publication-status
   hl7-fhir-r4-core.UsageContext
   hl7-fhir-r4-core.boolean
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.value-set.conceptmap-unmapped-mode
   hl7-fhir-r4-core.uri
   hl7-fhir-r4-core.value-set.concept-map-equivalence
   hl7-fhir-r4-core.ContactDetail
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier},
 schema
 {:zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :zen/tags #{zen/schema zen.fhir/base-schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/ConceptMap",
  :require #{:status},
  :type zen/map,
  :zen/desc
  "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
  :keys
  {:description
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Natural language description of the concept map"},
   :date
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "Date last changed"},
   :group
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:_sourceVersion {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :unmapped
      {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
       :type zen/map,
       :keys
       {:mode
        {:confirms #{hl7-fhir-r4-core.code/schema},
         :zen.fhir/value-set
         {:symbol
          hl7-fhir-r4-core.value-set.conceptmap-unmapped-mode/value-set,
          :strength :required},
         :zen/desc "provided | fixed | other-map"},
        :_mode {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :code
        {:confirms #{hl7-fhir-r4-core.code/schema},
         :zen/desc "Fixed code when mode = fixed"},
        :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :display
        {:confirms #{hl7-fhir-r4-core.string/schema},
         :zen/desc "Display for the code"},
        :_display {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :url
        {:confirms #{hl7-fhir-r4-core.canonical/schema},
         :zen/desc
         "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped"},
        :_url {:confirms #{hl7-fhir-r4-core.Element/schema}}},
       :require #{:mode},
       :zen/desc
       "What to do when there is no mapping for the source concept"},
      :element
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
        :type zen/map,
        :keys
        {:code
         {:confirms #{hl7-fhir-r4-core.code/schema},
          :zen/desc "Identifies element being mapped"},
         :_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :display
         {:confirms #{hl7-fhir-r4-core.string/schema},
          :zen/desc "Display for the code"},
         :_display {:confirms #{hl7-fhir-r4-core.Element/schema}},
         :target
         {:type zen/vector,
          :every
          {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
           :type zen/map,
           :keys
           {:_code {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :dependsOn
            {:type zen/vector,
             :every
             {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
              :type zen/map,
              :keys
              {:property
               {:confirms #{hl7-fhir-r4-core.uri/schema},
                :zen/desc "Reference to property mapping depends on"},
               :_property
               {:confirms #{hl7-fhir-r4-core.Element/schema}},
               :system
               {:confirms #{hl7-fhir-r4-core.canonical/schema},
                :zen/desc "Code System (if necessary)"},
               :_system {:confirms #{hl7-fhir-r4-core.Element/schema}},
               :value
               {:confirms #{hl7-fhir-r4-core.string/schema},
                :zen/desc "Value of the referenced element"},
               :_value {:confirms #{hl7-fhir-r4-core.Element/schema}},
               :display
               {:confirms #{hl7-fhir-r4-core.string/schema},
                :zen/desc "Display for the code (if value is a code)"},
               :_display
               {:confirms #{hl7-fhir-r4-core.Element/schema}}},
              :require #{:property :value},
              :zen/desc
              "Other elements required for this mapping (from context)"}},
            :_equivalence
            {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :product
            {:type zen/vector,
             :every
             {:zen/desc
              "Other concepts that this mapping also produces"}},
            :comment
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :zen/desc "Description of status/issues in mapping"},
            :code
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :zen/desc "Code that identifies the target element"},
            :display
            {:confirms #{hl7-fhir-r4-core.string/schema},
             :zen/desc "Display for the code"},
            :equivalence
            {:confirms #{hl7-fhir-r4-core.code/schema},
             :fhir/flags #{:?!},
             :zen.fhir/value-set
             {:symbol
              hl7-fhir-r4-core.value-set.concept-map-equivalence/value-set,
              :strength :required},
             :zen/desc
             "relatedto | equivalent | equal | wider | subsumes | narrower | specializes | inexact | unmatched | disjoint"},
            :_comment {:confirms #{hl7-fhir-r4-core.Element/schema}},
            :_display {:confirms #{hl7-fhir-r4-core.Element/schema}}},
           :require #{:equivalence},
           :zen/desc "Concept in target system for element"}}},
        :zen/desc "Mappings for a concept from the source set"},
       :minItems 1},
      :_targetVersion {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :targetVersion
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Specific version of the  code system"},
      :source
      {:confirms #{hl7-fhir-r4-core.uri/schema},
       :zen/desc
       "Source system where concepts to be mapped are defined"},
      :sourceVersion
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Specific version of the  code system"},
      :_target {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :target
      {:confirms #{hl7-fhir-r4-core.uri/schema},
       :zen/desc
       "Target system that the concepts are to be mapped to"},
      :_source {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :require #{:element},
     :zen/desc "Same source and target systems"}},
   :publisher
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name of the publisher (organization or individual)"},
   :jurisdiction
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc
     "Intended jurisdiction for concept map (if applicable)"}},
   :_publisher {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :purpose
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Why this concept map is defined"},
   :_date {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :name
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name for this concept map (computer friendly)"},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_experimental {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :useContext
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.UsageContext/schema},
     :fhir/flags #{:SU},
     :zen/desc "The context that the content is intended to support"}},
   :copyright
   {:confirms #{hl7-fhir-r4-core.markdown/schema},
    :zen/desc "Use and/or publishing restrictions"},
   :experimental
   {:confirms #{hl7-fhir-r4-core.boolean/schema},
    :fhir/flags #{:SU},
    :zen/desc "For testing purposes, not real usage"},
   :source
   {:fhir/polymorphic true,
    :exclusive-keys #{#{:canonical :uri}},
    :type zen/map,
    :keys
    {:uri {:confirms #{hl7-fhir-r4-core.uri/schema}},
     :_uri {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :canonical {:confirms #{hl7-fhir-r4-core.canonical/schema}},
     :_canonical {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :fhir/flags #{:SU},
    :zen/desc
    "The source value set that contains the concepts that are being mapped"},
   :title
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Name for this concept map (human friendly)"},
   :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_purpose {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.publication-status/value-set,
     :strength :required},
    :zen/desc "draft | active | retired | unknown"},
   :_name {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :url
   {:confirms #{hl7-fhir-r4-core.uri/schema},
    :fhir/flags #{:SU},
    :zen/desc
    "Canonical identifier for this concept map, represented as a URI (globally unique)"},
   :identifier
   {:confirms #{hl7-fhir-r4-core.Identifier/schema},
    :fhir/flags #{:SU},
    :zen/desc "Additional identifier for the concept map"},
   :_copyright {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :_title {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :target
   {:fhir/polymorphic true,
    :exclusive-keys #{#{:canonical :uri}},
    :type zen/map,
    :keys
    {:uri {:confirms #{hl7-fhir-r4-core.uri/schema}},
     :_uri {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :canonical {:confirms #{hl7-fhir-r4-core.canonical/schema}},
     :_canonical {:confirms #{hl7-fhir-r4-core.Element/schema}}},
    :fhir/flags #{:SU},
    :zen/desc
    "The target value set which provides context for the mappings"},
   :version
   {:confirms #{hl7-fhir-r4-core.string/schema},
    :fhir/flags #{:SU},
    :zen/desc "Business version of the concept map"},
   :_version {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :contact
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.ContactDetail/schema},
     :fhir/flags #{:SU},
     :zen/desc "Contact details for the publisher"}},
   :_url {:confirms #{hl7-fhir-r4-core.Element/schema}}},
  :zen.fhir/type "ConceptMap"}}