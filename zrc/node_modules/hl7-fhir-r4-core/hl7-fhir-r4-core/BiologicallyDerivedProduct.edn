{ns hl7-fhir-r4-core.BiologicallyDerivedProduct,
 import
 #{hl7-fhir-r4-core.integer
   hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.decimal
   hl7-fhir-r4-core.Substance
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.value-set.product-storage-scale
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.BiologicallyDerivedProduct
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.value-set.product-category
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.ServiceRequest
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.value-set.product-status
   hl7-fhir-r4-core.Organization},
 schema
 {:zen/tags #{zen/schema zen.fhir/base-schema},
  :zen/desc
  "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
  :zen.fhir/type "BiologicallyDerivedProduct",
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct",
  :zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :type zen/map,
  :keys
  {:_quantity {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :request
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.ServiceRequest/schema}},
     :zen/desc "Procedure request"}},
   :processing
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:description
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Description of of processing"},
      :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :procedure
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc "Procesing code"},
      :additive
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :zen.fhir/reference
       {:refers #{hl7-fhir-r4-core.Substance/schema}},
       :zen/desc "Substance added during processing"},
      :time
      {:fhir/polymorphic true,
       :exclusive-keys #{#{:dateTime :Period}},
       :type zen/map,
       :keys
       {:dateTime {:confirms #{hl7-fhir-r4-core.dateTime/schema}},
        :_dateTime {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :Period {:confirms #{hl7-fhir-r4-core.Period/schema}}},
       :zen/desc "Time of processing"}},
     :zen/desc "Any processing of the product during collection"}},
   :_productCategory {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :parent
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.BiologicallyDerivedProduct/schema}},
     :zen/desc "BiologicallyDerivedProduct parent"}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.product-status/value-set,
     :strength :required},
    :zen/desc "available | unavailable"},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "External ids for this item"}},
   :productCode
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :zen/desc "What this biologically derived product is"},
   :storage
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:description
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Description of storage"},
      :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :temperature
      {:confirms #{hl7-fhir-r4-core.decimal/schema},
       :zen/desc "Storage temperature"},
      :_temperature {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :scale
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-r4-core.value-set.product-storage-scale/value-set,
        :strength :required},
       :zen/desc "farenheit | celsius | kelvin"},
      :_scale {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :duration
      {:confirms #{hl7-fhir-r4-core.Period/schema},
       :zen/desc "Storage timeperiod"}},
     :zen/desc "Product storage"}},
   :quantity
   {:confirms #{hl7-fhir-r4-core.integer/schema},
    :zen/desc "The amount of this biologically derived product"},
   :productCategory
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.product-category/value-set,
     :strength :required},
    :zen/desc "organ | tissue | fluid | cells | biologicalAgent"},
   :manipulation
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:description
     {:confirms #{hl7-fhir-r4-core.string/schema},
      :zen/desc "Description of manipulation"},
     :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :time
     {:fhir/polymorphic true,
      :exclusive-keys #{#{:dateTime :Period}},
      :type zen/map,
      :keys
      {:dateTime {:confirms #{hl7-fhir-r4-core.dateTime/schema}},
       :_dateTime {:confirms #{hl7-fhir-r4-core.Element/schema}},
       :Period {:confirms #{hl7-fhir-r4-core.Period/schema}}},
      :zen/desc "Time of manipulation"}},
    :zen/desc "Any manipulation of product post-collection"},
   :collection
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:collector
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.PractitionerRole/schema
         hl7-fhir-r4-core.Practitioner/schema}},
      :zen/desc "Individual performing collection"},
     :source
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.Patient/schema
         hl7-fhir-r4-core.Organization/schema}},
      :zen/desc "Who is product from"},
     :collected
     {:fhir/polymorphic true,
      :exclusive-keys #{#{:dateTime :Period}},
      :type zen/map,
      :keys
      {:dateTime {:confirms #{hl7-fhir-r4-core.dateTime/schema}},
       :_dateTime {:confirms #{hl7-fhir-r4-core.Element/schema}},
       :Period {:confirms #{hl7-fhir-r4-core.Period/schema}}},
      :zen/desc "Time of product collection"}},
    :zen/desc "How this product was collected"}}}}