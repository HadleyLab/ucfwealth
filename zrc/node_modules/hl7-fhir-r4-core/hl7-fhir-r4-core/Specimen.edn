{ns hl7-fhir-r4-core.Specimen,
 import
 #{hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.Device
   hl7-fhir-r4-core.Duration
   hl7-fhir-r4-core.Substance
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.SimpleQuantity
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.Annotation
   hl7-fhir-r4-core.Group
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.Specimen
   hl7-fhir-r4-core.string
   hl7-fhir-r4-core.Patient
   hl7-fhir-r4-core.PractitionerRole
   hl7-fhir-r4-core.Quantity
   hl7-fhir-r4-core.value-set.specimen-status
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.ServiceRequest
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.DomainResource
   hl7-fhir-r4-core.Practitioner
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.Identifier
   hl7-fhir-r4-core.Location},
 schema
 {:zen/tags #{zen/schema zen.fhir/base-schema},
  :zen/desc "A sample to be used for analysis.",
  :zen.fhir/type "Specimen",
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/Specimen",
  :zen.fhir/version "0.5.18",
  :confirms
  #{hl7-fhir-r4-core.DomainResource/schema zen.fhir/Resource},
  :type zen/map,
  :keys
  {:request
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference
     {:refers #{hl7-fhir-r4-core.ServiceRequest/schema}},
     :zen/desc "Why the specimen was collected"}},
   :receivedTime
   {:confirms #{hl7-fhir-r4-core.dateTime/schema},
    :fhir/flags #{:SU},
    :zen/desc "The time when specimen was received for processing"},
   :processing
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:description
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Textual description of procedure"},
      :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :procedure
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc
       "Indicates the treatment step  applied to the specimen"},
      :additive
      {:type zen/vector,
       :every
       {:confirms
        #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
        :zen.fhir/reference
        {:refers #{hl7-fhir-r4-core.Substance/schema}},
        :zen/desc "Material used in the processing step"}},
      :time
      {:fhir/polymorphic true,
       :exclusive-keys #{#{:dateTime :Period}},
       :type zen/map,
       :keys
       {:dateTime {:confirms #{hl7-fhir-r4-core.dateTime/schema}},
        :_dateTime {:confirms #{hl7-fhir-r4-core.Element/schema}},
        :Period {:confirms #{hl7-fhir-r4-core.Period/schema}}},
       :zen/desc "Date and time of specimen processing"}},
     :zen/desc "Processing and processing step details"}},
   :parent
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :zen.fhir/reference {:refers #{hl7-fhir-r4-core.Specimen/schema}},
     :zen/desc "Specimen from which this specimen originated"}},
   :_status {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :type
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen/desc "Kind of material that forms the specimen"},
   :note
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Annotation/schema},
     :zen/desc "Comments"}},
   :status
   {:confirms #{hl7-fhir-r4-core.code/schema},
    :fhir/flags #{:SU :?!},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.specimen-status/value-set,
     :strength :required},
    :zen/desc
    "available | unavailable | unsatisfactory | entered-in-error"},
   :condition
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
     :fhir/flags #{:SU},
     :zen/desc "State of the specimen"}},
   :container
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:identifier
      {:type zen/vector,
       :every
       {:confirms #{hl7-fhir-r4-core.Identifier/schema},
        :fhir/flags #{:SU},
        :zen/desc "Id for the container"}},
      :description
      {:confirms #{hl7-fhir-r4-core.string/schema},
       :zen/desc "Textual description of the container"},
      :_description {:confirms #{hl7-fhir-r4-core.Element/schema}},
      :type
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :zen/desc
       "Kind of container directly associated with specimen"},
      :capacity
      {:confirms
       #{hl7-fhir-r4-core.Quantity/schema
         hl7-fhir-r4-core.SimpleQuantity/schema},
       :zen/desc "Container volume or size"},
      :specimenQuantity
      {:confirms
       #{hl7-fhir-r4-core.Quantity/schema
         hl7-fhir-r4-core.SimpleQuantity/schema},
       :zen/desc "Quantity of specimen within container"},
      :additive
      {:fhir/polymorphic true,
       :exclusive-keys #{#{:CodeableConcept :Reference}},
       :type zen/map,
       :keys
       {:CodeableConcept
        {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
        :Reference
        {:confirms
         #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
         :zen.fhir/reference
         {:refers #{hl7-fhir-r4-core.Substance/schema}}}},
       :zen/desc "Additive associated with container"}},
     :zen/desc "Direct container of specimen (tube/slide, etc.)"}},
   :identifier
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Identifier/schema},
     :fhir/flags #{:SU},
     :zen/desc "External Identifier"}},
   :accessionIdentifier
   {:confirms #{hl7-fhir-r4-core.Identifier/schema},
    :fhir/flags #{:SU},
    :zen/desc "Identifier assigned by the lab"},
   :_receivedTime {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :collection
   {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
    :type zen/map,
    :keys
    {:collector
     {:confirms
      #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
      :fhir/flags #{:SU},
      :zen.fhir/reference
      {:refers
       #{hl7-fhir-r4-core.PractitionerRole/schema
         hl7-fhir-r4-core.Practitioner/schema}},
      :zen/desc "Who collected the specimen"},
     :collected
     {:fhir/polymorphic true,
      :exclusive-keys #{#{:dateTime :Period}},
      :type zen/map,
      :keys
      {:dateTime {:confirms #{hl7-fhir-r4-core.dateTime/schema}},
       :_dateTime {:confirms #{hl7-fhir-r4-core.Element/schema}},
       :Period {:confirms #{hl7-fhir-r4-core.Period/schema}}},
      :fhir/flags #{:SU},
      :zen/desc "Collection time"},
     :duration
     {:confirms #{hl7-fhir-r4-core.Duration/schema},
      :fhir/flags #{:SU},
      :zen/desc "How long it took to collect specimen"},
     :quantity
     {:confirms
      #{hl7-fhir-r4-core.Quantity/schema
        hl7-fhir-r4-core.SimpleQuantity/schema},
      :zen/desc "The quantity of specimen collected"},
     :method
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :zen/desc "Technique used to perform collection"},
     :bodySite
     {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
      :zen/desc "Anatomical collection site"},
     :fastingStatus
     {:fhir/polymorphic true,
      :exclusive-keys #{#{:Duration :CodeableConcept}},
      :type zen/map,
      :keys
      {:CodeableConcept
       {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema}},
       :Duration {:confirms #{hl7-fhir-r4-core.Duration/schema}}},
      :fhir/flags #{:SU},
      :zen/desc
      "Whether or how long patient abstained from food and/or drink"}},
    :zen/desc "Collection details"},
   :subject
   {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
    :fhir/flags #{:SU},
    :zen.fhir/reference
    {:refers
     #{hl7-fhir-r4-core.Patient/schema
       hl7-fhir-r4-core.Device/schema
       hl7-fhir-r4-core.Location/schema
       hl7-fhir-r4-core.Substance/schema
       hl7-fhir-r4-core.Group/schema}},
    :zen/desc
    "Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device"}}}}