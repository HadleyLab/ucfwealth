{ns hl7-fhir-r4-core.Timing,
 import
 #{hl7-fhir-r4-core.Period
   hl7-fhir-r4-core.decimal
   hl7-fhir-r4-core.Duration
   hl7-fhir-r4-core.BackboneElement
   hl7-fhir-r4-core.time
   hl7-fhir-r4-core.code
   zen.fhir
   hl7-fhir-r4-core.value-set.units-of-time
   hl7-fhir-r4-core.dateTime
   hl7-fhir-r4-core.Range
   hl7-fhir-r4-core.value-set.days-of-week
   hl7-fhir-r4-core.unsignedInt
   hl7-fhir-r4-core.positiveInt
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-r4-core.value-set.event-timing
   hl7-fhir-r4-core.value-set.timing-abbreviation},
 schema
 {:zen/tags #{zen/schema zen.fhir/structure-schema},
  :zen/desc
  "Base StructureDefinition for Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
  :zen.fhir/type "Timing",
  :zen.fhir/profileUri
  "http://hl7.org/fhir/StructureDefinition/Timing",
  :zen.fhir/version "0.5.18",
  :confirms #{hl7-fhir-r4-core.BackboneElement/schema},
  :type zen/map,
  :keys
  {:event
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.dateTime/schema},
     :fhir/flags #{:SU},
     :zen/desc "When the event occurs"}},
   :_event
   {:type zen/vector,
    :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
   :repeat
   {:confirms #{hl7-fhir-r4-core.Element/schema},
    :type zen/map,
    :keys
    {:_period {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_durationMax {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_countMax {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_count {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :frequencyMax
     {:confirms #{hl7-fhir-r4-core.positiveInt/schema},
      :fhir/flags #{:SU},
      :zen/desc "Event occurs up to frequencyMax times per period"},
     :_periodMax {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :when
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.event-timing/value-set,
        :strength :required},
       :zen/desc "Code for time period of occurrence"}},
     :_offset {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :offset
     {:confirms #{hl7-fhir-r4-core.unsignedInt/schema},
      :fhir/flags #{:SU},
      :zen/desc "Minutes from event (before or after)"},
     :_duration {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_frequency {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :periodUnit
     {:confirms #{hl7-fhir-r4-core.code/schema},
      :fhir/flags #{:SU},
      :zen.fhir/value-set
      {:symbol hl7-fhir-r4-core.value-set.units-of-time/value-set,
       :strength :required},
      :zen/desc "s | min | h | d | wk | mo | a - unit of time (UCUM)"},
     :_timeOfDay
     {:type zen/vector,
      :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :_frequencyMax {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :frequency
     {:confirms #{hl7-fhir-r4-core.positiveInt/schema},
      :fhir/flags #{:SU},
      :zen/desc "Event occurs frequency times per period"},
     :durationMax
     {:confirms #{hl7-fhir-r4-core.decimal/schema},
      :fhir/flags #{:SU},
      :zen/desc "How long when it happens (Max)"},
     :duration
     {:confirms #{hl7-fhir-r4-core.decimal/schema},
      :fhir/flags #{:SU},
      :zen/desc "How long when it happens"},
     :bounds
     {:fhir/polymorphic true,
      :exclusive-keys #{#{:Range :Period :Duration}},
      :type zen/map,
      :keys
      {:Duration {:confirms #{hl7-fhir-r4-core.Duration/schema}},
       :Range {:confirms #{hl7-fhir-r4-core.Range/schema}},
       :Period {:confirms #{hl7-fhir-r4-core.Period/schema}}},
      :fhir/flags #{:SU},
      :zen/desc
      "Length/Range of lengths, or (Start and/or end) limits"},
     :durationUnit
     {:confirms #{hl7-fhir-r4-core.code/schema},
      :fhir/flags #{:SU},
      :zen.fhir/value-set
      {:symbol hl7-fhir-r4-core.value-set.units-of-time/value-set,
       :strength :required},
      :zen/desc "s | min | h | d | wk | mo | a - unit of time (UCUM)"},
     :dayOfWeek
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.code/schema},
       :fhir/flags #{:SU},
       :zen.fhir/value-set
       {:symbol hl7-fhir-r4-core.value-set.days-of-week/value-set,
        :strength :required},
       :zen/desc "mon | tue | wed | thu | fri | sat | sun"}},
     :count
     {:confirms #{hl7-fhir-r4-core.positiveInt/schema},
      :fhir/flags #{:SU},
      :zen/desc "Number of times to repeat"},
     :_periodUnit {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :_dayOfWeek
     {:type zen/vector,
      :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :_when
     {:type zen/vector,
      :every {:confirms #{hl7-fhir-r4-core.Element/schema}}},
     :periodMax
     {:confirms #{hl7-fhir-r4-core.decimal/schema},
      :fhir/flags #{:SU},
      :zen/desc "Upper limit of period (3-4 hours)"},
     :period
     {:confirms #{hl7-fhir-r4-core.decimal/schema},
      :fhir/flags #{:SU},
      :zen/desc "Event occurs frequency times per period"},
     :countMax
     {:confirms #{hl7-fhir-r4-core.positiveInt/schema},
      :fhir/flags #{:SU},
      :zen/desc "Maximum number of times to repeat"},
     :_durationUnit {:confirms #{hl7-fhir-r4-core.Element/schema}},
     :timeOfDay
     {:type zen/vector,
      :every
      {:confirms #{hl7-fhir-r4-core.time/schema},
       :fhir/flags #{:SU},
       :zen/desc "Time of day for action"}}},
    :fhir/flags #{:SU},
    :zen/desc "When the event is to occur"},
   :code
   {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
    :fhir/flags #{:SU},
    :zen.fhir/value-set
    {:symbol hl7-fhir-r4-core.value-set.timing-abbreviation/value-set,
     :strength :preferred},
    :zen/desc "BID | TID | QID | AM | PM | QD | QOD | +"}}}}